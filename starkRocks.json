{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "previousOwner",
                    "type": "felt"
                },
                {
                    "name": "newOwner",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "account",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Paused",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "account",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "Transfer",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "approved",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "Approval",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "operator",
                    "type": "felt"
                },
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "name",
                    "type": "felt"
                },
                {
                    "name": "symbol",
                    "type": "felt"
                },
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "base_uri_len",
                    "type": "felt"
                },
                {
                    "name": "base_uri",
                    "type": "felt*"
                },
                {
                    "name": "json_extension",
                    "type": "felt"
                },
                {
                    "name": "currency_address",
                    "type": "felt"
                },
                {
                    "name": "mint_price",
                    "type": "Uint256"
                },
                {
                    "name": "root",
                    "type": "felt"
                },
                {
                    "name": "wallet_addresses_len",
                    "type": "felt"
                },
                {
                    "name": "wallet_addresses",
                    "type": "felt*"
                }
            ],
            "name": "constructor",
            "outputs": [],
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "felt"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "name": "success",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "name",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "symbol",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "balance",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                },
                {
                    "name": "operator",
                    "type": "felt"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "name": "isApproved",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "supply",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "Uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "name": "token_uri_len",
                    "type": "felt"
                },
                {
                    "name": "token_uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "name": "paused",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "mintPrice",
            "outputs": [
                {
                    "name": "price",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "currencyAddress",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "baseUri",
            "outputs": [
                {
                    "name": "uri_len",
                    "type": "felt"
                },
                {
                    "name": "uri",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "_sale_price",
                    "type": "Uint256"
                }
            ],
            "name": "royalityInfo",
            "outputs": [
                {
                    "name": "receiver",
                    "type": "felt"
                },
                {
                    "name": "royalitytAmount",
                    "type": "Uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isPublicMintActive",
            "outputs": [
                {
                    "name": "p_state",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isWhitelistMintActive",
            "outputs": [
                {
                    "name": "wl_state",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "merkleRoot",
            "outputs": [
                {
                    "name": "root",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "operator",
                    "type": "felt"
                },
                {
                    "name": "approved",
                    "type": "felt"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "from_",
                    "type": "felt"
                },
                {
                    "name": "to",
                    "type": "felt"
                },
                {
                    "name": "tokenId",
                    "type": "Uint256"
                },
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "felt*"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "proof_len",
                    "type": "felt"
                },
                {
                    "name": "proof",
                    "type": "felt*"
                }
            ],
            "name": "wlMint",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "publicMint",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "felt"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "ipfs_uri_len",
                    "type": "felt"
                },
                {
                    "name": "ipfs_uri",
                    "type": "felt*"
                }
            ],
            "name": "set_base_uri",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "extension",
                    "type": "felt"
                }
            ],
            "name": "setTokenUriExtension",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "_receipt",
                    "type": "felt"
                },
                {
                    "name": "_royality_fee",
                    "type": "Uint256"
                }
            ],
            "name": "setRoyaltyInfo",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "_price",
                    "type": "Uint256"
                }
            ],
            "name": "setMintPrice",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setCurrencyAddress",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "startPublicMint",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "stopPublicMint",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "startWlMint",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "stopWlMint",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "token_id",
                    "type": "Uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "root",
                    "type": "felt"
                }
            ],
            "name": "setMerkleRoot",
            "outputs": [],
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [
            {
                "offset": "0xb58",
                "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
            }
        ],
        "EXTERNAL": [
            {
                "offset": "0xc17",
                "selector": "0x2962ba17806af798afa6eaf4aa8c93a9fb60a3e305045b6eea33435086cae9"
            },
            {
                "offset": "0x113d",
                "selector": "0x3e8cfd4725c1e28fa4a6e3e468b4fcf75367166b850ac5f04e33ec843e82c1"
            },
            {
                "offset": "0xe89",
                "selector": "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20"
            },
            {
                "offset": "0x106f",
                "selector": "0x56b0e035ed8adec1f979f303cba77a6227bb35f0216f2bdd3a5aeeeb1e05b5"
            },
            {
                "offset": "0x115c",
                "selector": "0x61069ab48af4ff62df3c06eed149a18bab9d4d458d7f561697fa3f1dcd0216"
            },
            {
                "offset": "0xdf0",
                "selector": "0x7448e55749d6920a260870b04f467047edd30eff239bb64111d39a2d85e398"
            },
            {
                "offset": "0xc81",
                "selector": "0x80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d"
            },
            {
                "offset": "0xe0e",
                "selector": "0xa3466eaef72f6a30510216886d71f55519c870a8a6e562e03cd2c092c3079b"
            },
            {
                "offset": "0xc3b",
                "selector": "0xb180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e"
            },
            {
                "offset": "0x100b",
                "selector": "0xc148ef471f6869f253bc8f5eaf00f651d0c021e8cb747704211d110d5e9b00"
            },
            {
                "offset": "0x1106",
                "selector": "0xcddda1cc7c234619134ba05efc0c738cd86bae31bb3385f734a059d31ab81b"
            },
            {
                "offset": "0xfdd",
                "selector": "0xd5d33d590e6660853069b37a2aea67c6fdaa0268626bc760350b590490feb5"
            },
            {
                "offset": "0x10ce",
                "selector": "0xdc7f4903a7487401d7cdbbdf90721b7a4ff20f7c611f927553313faab8fb20"
            },
            {
                "offset": "0xd97",
                "selector": "0xe0f3be9cd4929a9e1fd503e18f6a43378d79a2b0c15d8aae465ee957e8829b"
            },
            {
                "offset": "0xd40",
                "selector": "0x10b6a4a693acd15e3c178d669ddc69478098715bd9219141bf0d98c8584fe61"
            },
            {
                "offset": "0xcdd",
                "selector": "0x12a7823b0c6bee58f8c694888f32f862c6584caa8afa0242de046d298ba684d"
            },
            {
                "offset": "0xfc3",
                "selector": "0x14a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f"
            },
            {
                "offset": "0xeaf",
                "selector": "0x19d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444"
            },
            {
                "offset": "0xfab",
                "selector": "0x19ea78dfeefee473cead0f17e6cea7018f57abbf524110c3d3a369b248c7ce0"
            },
            {
                "offset": "0x1029",
                "selector": "0x1a1c09633d6f5b79420c964d6a30553e35edc0fdcbbd19ead284665170e6b6a"
            },
            {
                "offset": "0x1090",
                "selector": "0x1de6ba9939e94fb55f5234d53edec6bc0c9e5483eb96df5f8d310bca40eaf8b"
            },
            {
                "offset": "0xd03",
                "selector": "0x2016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0"
            },
            {
                "offset": "0xd5e",
                "selector": "0x20e702a3fb779eaf93cb3ae85e2a17758056275e00f36f32b9e4fa9fa830509"
            },
            {
                "offset": "0xbd4",
                "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
            },
            {
                "offset": "0xe49",
                "selector": "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c"
            },
            {
                "offset": "0xc5f",
                "selector": "0x21cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30"
            },
            {
                "offset": "0xd21",
                "selector": "0x235723ac350a69d2a92d3703f17439cbaadf2f093a21ba5bf5f1a53eb2a14d9"
            },
            {
                "offset": "0xb95",
                "selector": "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd"
            },
            {
                "offset": "0xe67",
                "selector": "0x2d4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a"
            },
            {
                "offset": "0xbf4",
                "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
            },
            {
                "offset": "0xdce",
                "selector": "0x3044242b57b14a0e329e80e3b35fb8b6e9ea451a1d6640debd13ab7d349b0b8"
            },
            {
                "offset": "0x104d",
                "selector": "0x31a3c096363d94e90476adf0e92304ce87d24f85755e1f1e0f53bde65f301e4"
            },
            {
                "offset": "0xf38",
                "selector": "0x32298939dae2d4fb3ae8af3c9e573e38051660eab54e5f46bc77421c1baf85b"
            },
            {
                "offset": "0xe2c",
                "selector": "0x34c76b38af2b483ad2de1b12024da4eeaef8a3c920afdf74a83a2fd0d65cfc4"
            },
            {
                "offset": "0x10af",
                "selector": "0x3598097959e4fb7e311c199d7796a9b70b834fbeafc745ae4e0460cc2ec92f9"
            },
            {
                "offset": "0x10ea",
                "selector": "0x35e65d7e35ade4336ba67ea5a201b2696a1a1e40eaa8fa49ac440fd04af673d"
            },
            {
                "offset": "0xbb6",
                "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
            },
            {
                "offset": "0x1122",
                "selector": "0x36e55fe0930764b2ce3d52e086222f528872493965e2e89b68abaceb4e76718"
            },
            {
                "offset": "0xff4",
                "selector": "0x3f618718f1cde37d9c527a9237b04e6ac0489a8647d0517bb15827758ece720"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "openzeppelin.access.ownable.library",
                    "openzeppelin.access.ownable.library.Ownable",
                    "openzeppelin.access.ownable.library.Ownable.assert_only_owner"
                ],
                "end_pc": 679,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 41,
                        "offset": 6
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 677,
                "value": "Ownable: caller is the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.access.ownable.library",
                    "openzeppelin.access.ownable.library.Ownable",
                    "openzeppelin.access.ownable.library.Ownable.assert_only_owner"
                ],
                "end_pc": 680,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 41,
                        "offset": 8
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 679,
                "value": "Ownable: caller is not the owner"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.access.ownable.library",
                    "openzeppelin.access.ownable.library.Ownable",
                    "openzeppelin.access.ownable.library.Ownable.transfer_ownership"
                ],
                "end_pc": 693,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 43,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 690,
                "value": "Ownable: new owner is the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.introspection.erc165.library",
                    "openzeppelin.introspection.erc165.library.ERC165",
                    "openzeppelin.introspection.erc165.library.ERC165.register_interface"
                ],
                "end_pc": 796,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 54,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 791,
                "value": "ERC165: invalid interface id"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.security.pausable.library",
                    "openzeppelin.security.pausable.library.Pausable",
                    "openzeppelin.security.pausable.library.Pausable.assert_not_paused"
                ],
                "end_pc": 896,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 61,
                        "offset": 23
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 894,
                "value": "Pausable: paused"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.security.pausable.library",
                    "openzeppelin.security.pausable.library.Pausable",
                    "openzeppelin.security.pausable.library.Pausable.assert_paused"
                ],
                "end_pc": 907,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 62,
                        "offset": 23
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 905,
                "value": "Pausable: not paused"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.security.safemath.library",
                    "openzeppelin.security.safemath.library.SafeUint256",
                    "openzeppelin.security.safemath.library.SafeUint256.add"
                ],
                "end_pc": 993,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 66,
                        "offset": 35
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 991,
                "value": "SafeUint256: addition overflow"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.security.safemath.library",
                    "openzeppelin.security.safemath.library.SafeUint256",
                    "openzeppelin.security.safemath.library.SafeUint256.sub_le"
                ],
                "end_pc": 1016,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 67,
                        "offset": 60
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1014,
                "value": "SafeUint256: subtraction overflow"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.balance_of"
                ],
                "end_pc": 1424,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 94,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1421,
                "value": "ERC721: balance query for the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.owner_of"
                ],
                "end_pc": 1436,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 95,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1431,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.owner_of"
                ],
                "end_pc": 1445,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 95,
                        "offset": 74
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1443,
                "value": "ERC721: owner query for nonexistent token"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.get_approved"
                ],
                "end_pc": 1455,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 96,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1450,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.get_approved"
                ],
                "end_pc": 1464,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 97,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1462,
                "value": "ERC721: approved query for nonexistent token"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.approve"
                ],
                "end_pc": 1485,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 99,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_mesage",
                "start_pc": 1480,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.approve"
                ],
                "end_pc": 1490,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 99,
                        "offset": 12
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1488,
                "value": "ERC721: cannot approve from the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.approve"
                ],
                "end_pc": 1500,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 99,
                        "offset": 82
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1497,
                "value": "ERC721: approval to current owner"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.approve"
                ],
                "end_pc": 1524,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 99,
                        "offset": 155
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1522,
                "value": "ERC721: approve caller is not owner nor approved for all"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.set_approval_for_all"
                ],
                "end_pc": 1542,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 102,
                        "offset": 6
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1539,
                "value": "ERC721: either the caller or operator is the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.set_approval_for_all"
                ],
                "end_pc": 1546,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 102,
                        "offset": 9
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1542,
                "value": "ERC721: approve to caller"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.set_approval_for_all"
                ],
                "end_pc": 1552,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 102,
                        "offset": 14
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1546,
                "value": "ERC721: approved is not a Cairo boolean"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.transfer_from"
                ],
                "end_pc": 1578,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 103,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1573,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.transfer_from"
                ],
                "end_pc": 1593,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 104,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1590,
                "value": "ERC721: either is not approved or the caller is the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.safe_transfer_from"
                ],
                "end_pc": 1613,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 106,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1608,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.safe_transfer_from"
                ],
                "end_pc": 1628,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 107,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1625,
                "value": "ERC721: either is not approved or the caller is the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner"
                ],
                "end_pc": 1659,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 109,
                        "offset": 99
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1658,
                "value": "ERC721: caller is not the token owner"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner"
                ],
                "end_pc": 1674,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 111,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1672,
                "value": "ERC721: token id does not exist"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._transfer"
                ],
                "end_pc": 1783,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 115,
                        "offset": 87
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1782,
                "value": "ERC721: transfer from incorrect owner"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._transfer"
                ],
                "end_pc": 1786,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 115,
                        "offset": 87
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1783,
                "value": "ERC721: cannot transfer to the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._safe_transfer"
                ],
                "end_pc": 1865,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 117,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1863,
                "value": "ERC721: transfer to non ERC721Receiver implementer"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._mint"
                ],
                "end_pc": 1874,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 118,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1869,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._mint"
                ],
                "end_pc": 1877,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 118,
                        "offset": 6
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1874,
                "value": "ERC721: cannot mint to the zero address"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._mint"
                ],
                "end_pc": 1886,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 118,
                        "offset": 88
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1884,
                "value": "ERC721: token already minted"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library.ERC721",
                    "openzeppelin.token.erc721.library.ERC721._burn"
                ],
                "end_pc": 1931,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 119,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1926,
                "value": "ERC721: token_id is not a valid Uint256"
            },
            {
                "accessible_scopes": [
                    "openzeppelin.token.erc721.library",
                    "openzeppelin.token.erc721.library._check_onERC721Received"
                ],
                "end_pc": 2010,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 121,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2008,
                "value": "ERC721: transfer to non ERC721Receiver implementer"
            },
            {
                "accessible_scopes": [
                    "src.contracts.lib.array.array",
                    "src.contracts.lib.array.array.concat_arr"
                ],
                "end_pc": 2063,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 123,
                        "offset": 2
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2056,
                "value": "concat_arr: size must be greather or equal to 1"
            },
            {
                "accessible_scopes": [
                    "src.contracts.lib.array.array",
                    "src.contracts.lib.array.array.invert_arr"
                ],
                "end_pc": 2089,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 126,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2083,
                "value": "invert_arr: size must be greather or equal to 1"
            },
            {
                "accessible_scopes": [
                    "src.contracts.lib.string.libs.conversion",
                    "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string"
                ],
                "end_pc": 2211,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 138,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 2205,
                "value": "felt_to_string: exceeding max String length 2^15"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.tokenURI"
                ],
                "end_pc": 3227,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 225,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3225,
                "value": "ERC721_Metadata: token URI for nonexistent token"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.wlMint"
                ],
                "end_pc": 3838,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 279,
                        "offset": 209
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3836,
                "value": "Mint not started"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.wlMint"
                ],
                "end_pc": 3862,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 280,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3861,
                "value": "Proof is not valid"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.wlMint"
                ],
                "end_pc": 3864,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 280,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3862,
                "value": "Already minted"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.wlMint"
                ],
                "end_pc": 3875,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 280,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3873,
                "value": "ERC20 transfer failed"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.publicMint"
                ],
                "end_pc": 3968,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 284,
                        "offset": 209
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3967,
                "value": "Bot get out"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.publicMint"
                ],
                "end_pc": 3970,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 284,
                        "offset": 209
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3968,
                "value": "Mint not started"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.publicMint"
                ],
                "end_pc": 3972,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 284,
                        "offset": 209
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3970,
                "value": "Already minted"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.publicMint"
                ],
                "end_pc": 3979,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 284,
                        "offset": 209
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3972,
                "value": "MAX SUPPLY EXCEEDED"
            },
            {
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.publicMint"
                ],
                "end_pc": 3990,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 284,
                        "offset": 248
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 3988,
                "value": "ERC20 transfer failed"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check"
        ],
        "compiler_version": "0.10.2",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff95",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff83",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff74",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6c",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x476574436f6e747261637441646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x4765745478496e666f",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x5",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff33",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff22",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff47",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x404b800280028002",
            "0x404b800380038003",
            "0x482a7ffc7ffa8000",
            "0x4846800180028000",
            "0x100000000000000000000000000000000",
            "0x40327fff80007ffe",
            "0x482a7ffd7ffb8000",
            "0x482880027fff8000",
            "0x4846800180038000",
            "0x100000000000000000000000000000000",
            "0x40327fff80017ffe",
            "0x480a7ff97fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80037fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x4846800180018000",
            "0x10000000000000000",
            "0x40337fff80007ffd",
            "0x400380007ffc8000",
            "0x480680017fff8000",
            "0xffffffffffffffff",
            "0x4828800080007fff",
            "0x400280017ffc7fff",
            "0x400380027ffc8001",
            "0x482680017ffc8000",
            "0x3",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x48127ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x48127ffd7fff8000",
            "0x48507ff17fd98000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x48507fe67fcf8000",
            "0x48507fe67fcd8000",
            "0x48307fff7ffe8000",
            "0x48127ffa7fff8000",
            "0x48307ffb7ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x48507fd77fcb8000",
            "0x48507fd77fbf8000",
            "0x48307fff7ffe8000",
            "0x48507fe07fbc8000",
            "0x48307fff7ffe8000",
            "0x48127ff87fff8000",
            "0x48307ff97ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcd",
            "0x48507fc67fbb8000",
            "0x48507fc67fb98000",
            "0x48307fff7ffe8000",
            "0x48507fcf7fac8000",
            "0x48307fff7ffe8000",
            "0x48507fce7fa98000",
            "0x48307fff7ffe8000",
            "0x48127ff67fff8000",
            "0x48307ff77ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc2",
            "0x48507fb47fa88000",
            "0x48507fbe7fa68000",
            "0x48307fff7ffe8000",
            "0x48507fbd7f998000",
            "0x48307fff7ffe8000",
            "0x48127ff87fff8000",
            "0x48307ff97ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb9",
            "0x48507fae7f978000",
            "0x48507fae7f958000",
            "0x48307fff7ffe8000",
            "0x48127ffa7fff8000",
            "0x48307ffb7ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb2",
            "0x48507fa07f888000",
            "0x48127ffc7fff8000",
            "0x48307ffd7ffe8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x48507fac7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x48507fce7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x48507fec7fff8000",
            "0x480680017fff8000",
            "0x10000000000000000",
            "0x48507ff87fff8000",
            "0x48127ff57fff8000",
            "0x48307ff87f958000",
            "0x48307ff97fb48000",
            "0x48307ffa7fd78000",
            "0x48307ffb7ff28000",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffb",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ff97fff8000",
            "0x482680017ffa8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5e",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff57",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48307ffd80007ffe",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff85",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff55",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7a",
            "0x48127ffb7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4a",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6f",
            "0x400680017fff7f49",
            "0x0",
            "0x400680017fff7f4a",
            "0x0",
            "0x48127ffb7fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3b",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3a",
            "0x40127e747fff7ffd",
            "0x40127e757fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127fdf7fff8000",
            "0x48127fdf7fff8000",
            "0x48127f267fff8000",
            "0x48127f267fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff31",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127fe37fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff27",
            "0x400680017fff7fff",
            "0x0",
            "0x40127e447fff7ffd",
            "0x40127e457fff7ffe",
            "0x48127ffc7fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9a",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480a80057fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0xffffffffffffffffffffffffffffffff",
            "0x480680017fff8000",
            "0xffffffffffffffffffffffffffffffff",
            "0x480a7ffb7fff8000",
            "0x48287ffc80007ffd",
            "0x48287ffd80007ffd",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeef",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda0",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x1390fd803c110ac71730ece1decfc34eb1d0088e295d4f1b125dda1e0c5b9ff",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9a",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7c",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x2bd557f4ba80dfabefabe45e9b2dd35db1b9a78e96c72bc2b69b655ce47a930",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5d",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe57",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x2e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xc",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2f",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd74",
            "0x40127ffd7fff7ff7",
            "0x48127ffc7fff8000",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcf",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd66",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x10f6bdc8f69644775581b157f06334cb94ae302da4f6d09656c9a31f092cff6",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd23",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb9",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdee",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde7",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffe00365a",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd04",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xeca43804a5f93c1042364c663f2fc25aaf208eb04ef31dac6c41062a0ef8a8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb0",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdaa",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbc",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2eb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb6",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd99",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca4",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0xece5baf71f670bcb771481fd7bd9efd6d6b8053246fe67b5a13db8bf5f50f1",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9e",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd81",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb5",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffaf",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa4",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd39",
            "0x48127ffe7fff8000",
            "0x48127ff87fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa6",
            "0x48127ffe7fff8000",
            "0x48127fde7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd24",
            "0x48127ffe7fff8000",
            "0x48127ff87fff8000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa9",
            "0x48127ffe7fff8000",
            "0x48127fde7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc46",
            "0x40137fff7fff8000",
            "0x4003800080007ffd",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcff",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd70",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6c",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6b",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd59",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd55",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde3",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe53",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbff",
            "0x40137fff7fff8000",
            "0x4003800080007ff8",
            "0x4003800180007ff9",
            "0x4003800280007ffa",
            "0x4003800380007ffb",
            "0x4003800480007ffc",
            "0x400380007ff67ffc",
            "0x402780017ff68001",
            "0x1",
            "0x4826800180008000",
            "0x5",
            "0x40297ffc7fff8002",
            "0x4826800180008000",
            "0x5",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf6",
            "0x480a7ff57fff8000",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0xfa119a8fafc6f1a02deb36fe5efbcc4929ef2021e50cf1cb6d1a780ccd009b",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcaa",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a80017fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbda",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd4",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x4003800180017ffb",
            "0x4003800280017ffc",
            "0x4003800380017ffd",
            "0x4826800180018000",
            "0x4",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb4",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbf",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x134692b230b9e1ffa39098904722134159652b09c5bc41d88d6698779d228ff",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb9",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x4003800180017ffb",
            "0x4003800280017ffc",
            "0x4003800380017ffd",
            "0x4826800180018000",
            "0x4",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc99",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba4",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x6ad9ed7b6318f1bcffefe19df9aeb40d22c36bed567e1925a5ccde0536edd",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9e",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7f",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3a762f04043ed52ed42b61e4ad2e367163f5a928ef94f71121e68d78b8a00df",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc60",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5a",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x144d444467c1a7848e62c72fd678f9225602bf41005c66940ee2373705d90a2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc42",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc3c",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x19eba13c2ffadbed69e7a3ff4399447db5f0f1deff605072b123c3d33e5e300",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4f",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4c",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe2",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc16",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc0e",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x3bbfaec36427c06f699125e4eedffd9148420983ff94e5284a9087e22050b79",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb21",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb7",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbec",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe7",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbdf",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbda",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x2618225f6ac4a00b9635ed0e036ea1db17cf353e7ad948e882dbbca50565fbd",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaed",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaea",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb80",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb4",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbac",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x350efce99c55a2fbf8c09cde498fd24d686f21a900621778cd59ed10f4ae843",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffabf",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffabc",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb52",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb86",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7e",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff15",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff30",
            "0x480680017fff8000",
            "0x80ac58cd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9e",
            "0x480680017fff8000",
            "0x5b5e139f",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9a",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef7",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0f",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa8b",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba9",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff22",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa76",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb96",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x10e",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff68",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8e",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb78",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb04",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa49",
            "0x48127ffc7fff8000",
            "0x480a7ff87fff8000",
            "0x48127ff57fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeec",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa44",
            "0x48307ffb80007fb5",
            "0x20680017fff7fff",
            "0xe",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xf2",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127fb07fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff63",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa27",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xdd",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad1",
            "0x48487ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa15",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa16",
            "0x480680017fff8000",
            "0x1",
            "0x48287ffd80007fff",
            "0x480680017fff8000",
            "0x0",
            "0x40527ffe7ffd7fff",
            "0x48127ff37fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff17fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4c",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127faf7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3f",
            "0x48127ffe7fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb1b",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaa7",
            "0x40137fff7fff8000",
            "0x480a7ff77fff8000",
            "0x48127ffd7fff8000",
            "0x48127ff77fff8000",
            "0x480a80007fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x4b",
            "0x48527fff80008000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e2",
            "0x48127ffa7fff8000",
            "0x48127ff87fff8000",
            "0x48127ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xaf",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff77fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf8",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa84",
            "0x40137fff7fff8000",
            "0x480a7ff57fff8000",
            "0x48127ffd7fff8000",
            "0x48127ff77fff8000",
            "0x480a80007fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x28",
            "0x48527fff80008000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9bf",
            "0x48127ffa7fff8000",
            "0x48127ff87fff8000",
            "0x48127ff97fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd1",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad5",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa61",
            "0x48127ffe7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff20",
            "0x40127fff7fff7fa8",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff97fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x3c",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff09",
            "0x40137fff7fff8000",
            "0x48297ffb80008000",
            "0x20680017fff7fff",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0b",
            "0x48287ffb80007fff",
            "0x20680017fff7fff",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a80007fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff11",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdfc",
            "0x20680017fff7fff",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe57",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb7",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd58",
            "0x48127ffe7fff8000",
            "0x48127fe07fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea4",
            "0x400a7ffa7fff7fff",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff921",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdea",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdc",
            "0x48127f707fff8000",
            "0x48127f707fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf0",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd9",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb6",
            "0x48127fd17fff8000",
            "0x48127fd17fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffddf",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdaa",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf6",
            "0x48127ffe7fff8000",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x7a",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8d2",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9f3",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c6",
            "0x480a7ff97fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff69",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8c",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc69",
            "0x48127fd17fff8000",
            "0x48127fd17fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd92",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5d",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca8",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ba",
            "0x480a7ffa7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe08",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3f",
            "0x48127f417fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd52",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc44",
            "0x48127f707fff8000",
            "0x48127f707fff8000",
            "0x48127ffb7fff8000",
            "0x48127e717fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd58",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd22",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127def7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6d",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff912",
            "0x48127ffe7fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x150b7a02",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf3",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x15",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x48127fe17fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2b",
            "0x400680017fff7fff",
            "0x150b7a02",
            "0x48127ffd7fff8000",
            "0x480a7ff67fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0xa66bd575",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd5",
            "0x48127ffd7fff8000",
            "0x480a7ff67fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff813",
            "0x40137fff7fff8000",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4003800380007ffd",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c9",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ff87fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff81c",
            "0x40137fff7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f2",
            "0x40137fff7fff8001",
            "0x480a80017fff8000",
            "0x480a7ffa7fff8000",
            "0x484a7ffd7ff98000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7f5",
            "0x484a7ffd7ff98000",
            "0x48327fff80018000",
            "0x480a7ffc7fff8000",
            "0x484a7ffd7ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7ef",
            "0x480a80007fff8000",
            "0x482a7ffb7ff98000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff801",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7d8",
            "0x40137fff7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xd",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x13",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x4",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x482680017ff98000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x482680017ffc8000",
            "0x1",
            "0x48487ffb7fff8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffa8000",
            "0x484a7ffb7ff88000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ff98000",
            "0x480080007fff8000",
            "0x400080007ffa7fff",
            "0x20780017fff7ffd",
            "0x4",
            "0x480a7ff77fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff77d",
            "0x40137fff7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0xe",
            "0x40137fff7fff8001",
            "0x40137ffe7fff8002",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff787",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0xa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7e9",
            "0x482a7ffd7ffc8000",
            "0x48287ffa7ffe8000",
            "0x400080007ffe7fff",
            "0x20680017fff7ffc",
            "0x7",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff875",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x7",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x48127fda7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x30",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x2a",
            "0x48287ffb80007fff",
            "0x20680017fff7fff",
            "0x8",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff842",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff70e",
            "0x10780017fff7fff",
            "0x7",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff707",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x20780017fff7ffc",
            "0x7",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
            "0x480a7ff87fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x7",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480280007ffd8000",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6d9",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x10",
            "0x48127ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff756",
            "0x48127fe57fff8000",
            "0x48127fe57fff8000",
            "0x48127ffb7fff8000",
            "0x48307ffc7ffb8000",
            "0x48127fe47fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7e9",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48317fff80007ffd",
            "0x20680017fff7fff",
            "0xd",
            "0x482a7ffd7ffb8000",
            "0x482a7ffd7ffb8000",
            "0x480a7ff87fff8000",
            "0x48127ff87fff8000",
            "0x480080007ffc8000",
            "0x480080007ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8d",
            "0x48127ffe7fff8000",
            "0x10780017fff7fff",
            "0xd",
            "0x482a7ffd7ffb8000",
            "0x482680017ffd8000",
            "0x1",
            "0x48327fff7ffb8000",
            "0x480a7ff87fff8000",
            "0x48127ff77fff8000",
            "0x480080007ffb8000",
            "0x480080007ffc8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff80",
            "0x48127ffe7fff8000",
            "0x484680017ffd8000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x48327fff7ffa8000",
            "0x400080007fff7ffc",
            "0x480a7ff77fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff682",
            "0x40137fff7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x8",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffc80007ffd",
            "0x20680017fff7fff",
            "0x9",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482a7ffd7ffb8000",
            "0x482a7ffd7ffb8000",
            "0x480a7ff87fff8000",
            "0x480080007ffd8000",
            "0x480080007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff663",
            "0x482a7ffd7ffa8000",
            "0x400080007fff7ffe",
            "0x480a7ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1411d7b847969170d89931d2cc4b485c042cd602c6de43080d4df9b072a57c0",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff650",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6e6",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff71b",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff714",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x304be67ef00ea25ce1893edf62b7d6d52f5becaca2be6b7e73286860cdba6a5",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6fc",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6f6",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x8ba3b4d036152cf12ee39a22d15894c0b8a2488eef2312c940ffd5acca762c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6de",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6d8",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1b8e00df80ec53a1a83a613a3ca57cfdf7a077e3065a6619848bf694a10fdc8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6c0",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6bb",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6b4",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff6af",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x2717bafef456d4f477323e9e7e2be3deec906c85b82f0d2d0c5add1b0c59c36",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff697",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff691",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1918ebb398d9257e773f0a8cf56a76d47e6295f17de7cf7a9d27e4471330508",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff679",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff673",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x96e45fe2dcdfea237b3514ce9a0befc89f1171413c62454052e8e321837d1b",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff65b",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff655",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1228d3ace87d6d0cc2b5e6e5154527eadbd1d519819c4c1b317f296383aa7c5",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff568",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5fe",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff633",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff62c",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xe03d1452333c3a1adebe1fdfe19bd3a58eceaf4b2d228fc7dc665a5855f11f",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff614",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff60e",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3892285f9c629e1bc8aa2b20b5524c01610e8c23d279bafb5a7a45888f7ea77",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5f6",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5f1",
            "0x48127ffe7fff8000",
            "0x482480017ff08000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5ec",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x48127fe77fff8000",
            "0x48127fee7fff8000",
            "0x48127ff47fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5e4",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5df",
            "0x482480017ff28000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5da",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xc6621ae136a32c67cbfcb3783dce3ebb93d20cfc9704e0659997b56b1431c6",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5c2",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5bc",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7fef7fff8000",
            "0x480a7ff07fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa3a",
            "0x480a7ff47fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff75e",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffece",
            "0x480a7ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff12",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeeb",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x662",
            "0x480a7ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9d",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x619",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280037ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x480280037ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080057ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x6",
            "0x480080057ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x2",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x482680017ffd8000",
            "0x4",
            "0x480080007ff18000",
            "0x480080017ff08000",
            "0x480080027fef8000",
            "0x480080037fee8000",
            "0x480080047fed8000",
            "0x480080057fec8000",
            "0x482480017feb8000",
            "0x6",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb8",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff77e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9d8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98d",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff97c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff96e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe52",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x5",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x4f5",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd41",
            "0x40137fff7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff360",
            "0x40137fff7fff8001",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd56",
            "0x40137fff7fff8002",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x514",
            "0x40137ffd7fff8003",
            "0x40137ffe7fff8004",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc14",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb48",
            "0x48307ffe7fff8000",
            "0x400180007fff8002",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x48127ffa7fff8000",
            "0x482480017ffa8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff333",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffaa",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5b6",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff65f",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce8",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4826800180008000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf2",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6d",
            "0x40137fff7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff28c",
            "0x40137fff7fff8001",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x446",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff279",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd36",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x3e8",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff429",
            "0x48127d527fff8000",
            "0x48127d527fff8000",
            "0x48127ff77fff8000",
            "0x48127d527fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffa",
            "0x4003800180007ffb",
            "0x4003800280007ffc",
            "0x4826800180008000",
            "0x3",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd5",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x48127ff27fff8000",
            "0x48127ff27fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf9",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff53c",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff783",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff51a",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff79d",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4fd",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff79e",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x4",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff4d9",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff79b",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280047ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x5",
            "0x480280047ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x480280047ffd8000",
            "0x482680017ffd8000",
            "0x5",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x8",
            "0x480a7ffa7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb48",
            "0x40137ffe7fff8000",
            "0x40137fff7fff8001",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1fa",
            "0x40137fff7fff8002",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1fd",
            "0x48127ffe7fff8000",
            "0x48127fef7fff8000",
            "0x48127fef7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe6",
            "0x40137fff7fff8003",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb99",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbba",
            "0x40137fff7fff8004",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb51",
            "0x40137fff7fff8005",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff3b4",
            "0x40137fff7fff8006",
            "0x400680017fff7f8f",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc18",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1fe",
            "0x40137fff7fff8007",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a80027fff8000",
            "0x480a80027fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e1",
            "0x48127fc77fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127fc67fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c1",
            "0x400a80077fff7fff",
            "0x400780017fff8004",
            "0x0",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80057fff8000",
            "0x480a80027fff8000",
            "0x480a80067fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ce",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127fdf7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80027fff8000",
            "0x4826800180038000",
            "0x1",
            "0x1104800180018000",
            "0x278",
            "0x4826800180038000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba7",
            "0x480a80027fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb83",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac3",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff177",
            "0x40137fff7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff17a",
            "0x48127ffe7fff8000",
            "0x48127fef7fff8000",
            "0x48127fef7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb63",
            "0x40137fff7fff8001",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb37",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff187",
            "0x48127ffe7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacc",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff330",
            "0x400180017fcc8000",
            "0x400680017fff7f89",
            "0x1",
            "0x400680017fff7fc6",
            "0x0",
            "0x48127ffe7fff8000",
            "0x4826800180018000",
            "0x1",
            "0x480680017fff8000",
            "0x1bc",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff09f",
            "0x48127ff27fff8000",
            "0x48127ffe7fff8000",
            "0x48127fd77fff8000",
            "0x480a80007fff8000",
            "0x48127ff17fff8000",
            "0x48127f3f7fff8000",
            "0x48127f3f7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff85b",
            "0x400680017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127fd57fff8000",
            "0x48127ffc7fff8000",
            "0x480a80007fff8000",
            "0x4826800180018000",
            "0x1",
            "0x1104800180018000",
            "0x205",
            "0x4826800180018000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb34",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb10",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff2e1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff2f3",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff2c6",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff2e5",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff2af",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff39f",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff298",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff39d",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff281",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9cc",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x188",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff257",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff97fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff23a",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa95",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff218",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a4",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1f8",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a8",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1da",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a7",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1be",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98b",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff1a2",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff98d",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff186",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff971",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff536",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff64b",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff14b",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9d0",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffd7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffc80007ffb",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff95a",
            "0x482a7ffb7ffd8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480080007ffc8000",
            "0x482680017ffb8000",
            "0x1",
            "0x1104800180018000",
            "0x1e",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff407",
            "0x20680017fff7fff",
            "0x8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff5a6",
            "0x48127ffe7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffb80007ffc",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482a7ffb7ffd8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x1",
            "0x480080007ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff811",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x208b7fff7fff7ffe",
            "0x48297ffb80007ffc",
            "0x20680017fff7fff",
            "0x6",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff7ee",
            "0x400280007ffd7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x8000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffeea1",
            "0x484680017ffd8000",
            "0x100000000000000000000000000000000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x48287ffc7ffc8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "24": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 3,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 2
                        }
                    }
                }
            ],
            "29": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_equal"
                    ],
                    "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_equal.a": 3,
                            "starkware.cairo.common.math.assert_not_equal.b": 4
                        }
                    }
                }
            ],
            "35": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 5
                        }
                    }
                }
            ],
            "44": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 8,
                            "starkware.cairo.common.math.assert_250_bit.low": 7,
                            "starkware.cairo.common.math.assert_250_bit.value": 6
                        }
                    }
                }
            ],
            "57": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 11,
                            "starkware.cairo.common.math.split_felt.low": 10,
                            "starkware.cairo.common.math.split_felt.value": 9
                        }
                    }
                }
            ],
            "86": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 12,
                            "starkware.cairo.common.math.assert_le_felt.b": 13,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 14
                        }
                    }
                }
            ],
            "96": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "110": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "122": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "131": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 15,
                            "starkware.cairo.common.math.assert_lt_felt.b": 16
                        }
                    }
                }
            ],
            "142": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 18,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 20,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 19,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 17
                        }
                    }
                }
            ],
            "159": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 21,
                            "starkware.starknet.common.storage.normalize_address.is_small": 22
                        }
                    }
                }
            ],
            "177": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 21,
                            "starkware.starknet.common.storage.normalize_address.is_250": 23
                        }
                    }
                }
            ],
            "204": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 24
                        }
                    }
                }
            ],
            "212": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 25
                        }
                    }
                }
            ],
            "219": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_contract_address"
                    ],
                    "code": "syscall_handler.get_contract_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": 26
                        }
                    }
                }
            ],
            "227": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 16,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 27
                        }
                    }
                }
            ],
            "236": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 17,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 28
                        }
                    }
                }
            ],
            "246": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 18,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 29
                        }
                    }
                }
            ],
            "252": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_tx_info"
                    ],
                    "code": "syscall_handler.get_tx_info(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 19,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr": 30
                        }
                    }
                }
            ],
            "264": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 31
                        }
                    }
                }
            ],
            "274": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 21,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 31
                        }
                    }
                }
            ],
            "302": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 23,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 32,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 33
                        }
                    }
                }
            ],
            "329": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.uint256",
                        "starkware.cairo.common.uint256.uint256_add"
                    ],
                    "code": "sum_low = ids.a.low + ids.b.low\nids.carry_low = 1 if sum_low >= ids.SHIFT else 0\nsum_high = ids.a.high + ids.b.high + ids.carry_low\nids.carry_high = 1 if sum_high >= ids.SHIFT else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 25,
                            "offset": 4
                        },
                        "reference_ids": {
                            "starkware.cairo.common.uint256.uint256_add.a": 34,
                            "starkware.cairo.common.uint256.uint256_add.b": 35,
                            "starkware.cairo.common.uint256.uint256_add.carry_high": 37,
                            "starkware.cairo.common.uint256.uint256_add.carry_low": 36
                        }
                    }
                }
            ],
            "351": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.uint256",
                        "starkware.cairo.common.uint256.split_64"
                    ],
                    "code": "ids.low = ids.a & ((1<<64) - 1)\nids.high = ids.a >> 64",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 26,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.uint256.split_64.a": 38,
                            "starkware.cairo.common.uint256.split_64.high": 40,
                            "starkware.cairo.common.uint256.split_64.low": 39
                        }
                    }
                }
            ],
            "491": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.uint256",
                        "starkware.cairo.common.uint256.uint256_mul_div_mod"
                    ],
                    "code": "a = (ids.a.high << 128) + ids.a.low\nb = (ids.b.high << 128) + ids.b.low\ndiv = (ids.div.high << 128) + ids.div.low\nquotient, remainder = divmod(a * b, div)\n\nids.quotient_low.low = quotient & ((1 << 128) - 1)\nids.quotient_low.high = (quotient >> 128) & ((1 << 128) - 1)\nids.quotient_high.low = (quotient >> 256) & ((1 << 128) - 1)\nids.quotient_high.high = quotient >> 384\nids.remainder.low = remainder & ((1 << 128) - 1)\nids.remainder.high = remainder >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 30,
                            "offset": 182
                        },
                        "reference_ids": {
                            "starkware.cairo.common.uint256.uint256_mul_div_mod.a": 41,
                            "starkware.cairo.common.uint256.uint256_mul_div_mod.b": 42,
                            "starkware.cairo.common.uint256.uint256_mul_div_mod.div": 43,
                            "starkware.cairo.common.uint256.uint256_mul_div_mod.quotient_high": 45,
                            "starkware.cairo.common.uint256.uint256_mul_div_mod.quotient_low": 44,
                            "starkware.cairo.common.uint256.uint256_mul_div_mod.remainder": 46
                        }
                    }
                }
            ],
            "2940": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.constructor"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 195,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2956": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.supportsInterface_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 198,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "2989": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.name_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 202,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3019": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.symbol_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 205,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3050": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.balanceOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 208,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3086": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.ownerOf_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 211,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3122": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.getApproved_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 215,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3158": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.isApprovedForAll_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 219,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3192": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.totalSupply_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 222,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3274": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.tokenURI_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 229,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3322": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.owner_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 235,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3352": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.paused_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 238,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3382": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.mintPrice_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 241,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3413": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.currencyAddress_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 244,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3460": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.baseUri_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 248,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3523": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.royalityInfo_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 254,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3559": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.isPublicMintActive_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 257,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3589": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.isWhitelistMintActive_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 260,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3619": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.merkleRoot_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 263,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3668": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.approve"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 268,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3697": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setApprovalForAll"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 270,
                            "offset": 157
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3733": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferFrom"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 274,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3781": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.safeTransferFrom"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 278,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "3914": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.wlMint"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 283,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4017": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.publicMint"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 287,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4044": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.transferOwnership"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 292,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4067": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.renounceOwnership"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 297,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4090": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.pause"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 301,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4113": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.unpause"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 305,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4155": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.set_base_uri"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 310,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4182": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setTokenUriExtension"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 314,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4218": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setRoyaltyInfo"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 318,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4250": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setMintPrice"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 322,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4280": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setCurrencyAddress"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 326,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4308": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.startPublicMint"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 330,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4336": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.stopPublicMint"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 334,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4364": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.startWlMint"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 338,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4392": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.stopWlMint"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 342,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4423": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.burn"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 344,
                            "offset": 771
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "4453": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.setMerkleRoot"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 348,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.Address_Has_Minted": {
                "type": "namespace"
            },
            "__main__.Address_Has_Minted.Args": {
                "full_name": "__main__.Address_Has_Minted.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Address_Has_Minted.ImplicitArgs": {
                "full_name": "__main__.Address_Has_Minted.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Address_Has_Minted.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Address_Has_Minted.addr": {
                "decorators": [],
                "pc": 2712,
                "type": "function"
            },
            "__main__.Address_Has_Minted.addr.Args": {
                "full_name": "__main__.Address_Has_Minted.addr.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.addr.ImplicitArgs": {
                "full_name": "__main__.Address_Has_Minted.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Address_Has_Minted.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Address_Has_Minted.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Address_Has_Minted.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Address_Has_Minted.read": {
                "decorators": [],
                "pc": 2726,
                "type": "function"
            },
            "__main__.Address_Has_Minted.read.Args": {
                "full_name": "__main__.Address_Has_Minted.read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.read.ImplicitArgs": {
                "full_name": "__main__.Address_Has_Minted.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.read.Return": {
                "cairo_type": "(state: felt)",
                "type": "type_definition"
            },
            "__main__.Address_Has_Minted.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Address_Has_Minted.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Address_Has_Minted.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Address_Has_Minted.write": {
                "decorators": [],
                "pc": 2740,
                "type": "function"
            },
            "__main__.Address_Has_Minted.write.Args": {
                "full_name": "__main__.Address_Has_Minted.write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.write.ImplicitArgs": {
                "full_name": "__main__.Address_Has_Minted.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Address_Has_Minted.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Address_Has_Minted.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri": {
                "type": "namespace"
            },
            "__main__.Base_Uri.Args": {
                "full_name": "__main__.Base_Uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Base_Uri.ImplicitArgs": {
                "full_name": "__main__.Base_Uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Base_Uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri.addr": {
                "decorators": [],
                "pc": 2480,
                "type": "function"
            },
            "__main__.Base_Uri.addr.Args": {
                "full_name": "__main__.Base_Uri.addr.Args",
                "members": {
                    "_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Base_Uri.addr.ImplicitArgs": {
                "full_name": "__main__.Base_Uri.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Base_Uri.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Base_Uri.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Base_Uri.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Base_Uri.read": {
                "decorators": [],
                "pc": 2494,
                "type": "function"
            },
            "__main__.Base_Uri.read.Args": {
                "full_name": "__main__.Base_Uri.read.Args",
                "members": {
                    "_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Base_Uri.read.ImplicitArgs": {
                "full_name": "__main__.Base_Uri.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Base_Uri.read.Return": {
                "cairo_type": "(token_uri: felt)",
                "type": "type_definition"
            },
            "__main__.Base_Uri.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Base_Uri.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Base_Uri.write": {
                "decorators": [],
                "pc": 2508,
                "type": "function"
            },
            "__main__.Base_Uri.write.Args": {
                "full_name": "__main__.Base_Uri.write.Args",
                "members": {
                    "_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Base_Uri.write.ImplicitArgs": {
                "full_name": "__main__.Base_Uri.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Base_Uri.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Base_Uri.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Extension": {
                "type": "namespace"
            },
            "__main__.Base_Uri_Extension.Args": {
                "full_name": "__main__.Base_Uri_Extension.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Base_Uri_Extension.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Extension.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Extension.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Extension.addr": {
                "decorators": [],
                "pc": 2551,
                "type": "function"
            },
            "__main__.Base_Uri_Extension.addr.Args": {
                "full_name": "__main__.Base_Uri_Extension.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.addr.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Extension.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Extension.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Extension.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Base_Uri_Extension.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Base_Uri_Extension.read": {
                "decorators": [],
                "pc": 2556,
                "type": "function"
            },
            "__main__.Base_Uri_Extension.read.Args": {
                "full_name": "__main__.Base_Uri_Extension.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.read.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Extension.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.read.Return": {
                "cairo_type": "(extension: felt)",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Extension.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Extension.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Base_Uri_Extension.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Base_Uri_Extension.write": {
                "decorators": [],
                "pc": 2569,
                "type": "function"
            },
            "__main__.Base_Uri_Extension.write.Args": {
                "full_name": "__main__.Base_Uri_Extension.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.write.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Extension.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Base_Uri_Extension.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Extension.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Len": {
                "type": "namespace"
            },
            "__main__.Base_Uri_Len.Args": {
                "full_name": "__main__.Base_Uri_Len.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Base_Uri_Len.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Len.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Len.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Len.addr": {
                "decorators": [],
                "pc": 2521,
                "type": "function"
            },
            "__main__.Base_Uri_Len.addr.Args": {
                "full_name": "__main__.Base_Uri_Len.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.addr.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Len.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Len.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Len.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Base_Uri_Len.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Base_Uri_Len.read": {
                "decorators": [],
                "pc": 2526,
                "type": "function"
            },
            "__main__.Base_Uri_Len.read.Args": {
                "full_name": "__main__.Base_Uri_Len.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.read.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Len.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.read.Return": {
                "cairo_type": "(token_uri_len: felt)",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Len.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Base_Uri_Len.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Base_Uri_Len.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Base_Uri_Len.write": {
                "decorators": [],
                "pc": 2539,
                "type": "function"
            },
            "__main__.Base_Uri_Len.write.Args": {
                "full_name": "__main__.Base_Uri_Len.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.write.ImplicitArgs": {
                "full_name": "__main__.Base_Uri_Len.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Base_Uri_Len.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Base_Uri_Len.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Currency_Address": {
                "type": "namespace"
            },
            "__main__.Currency_Address.Args": {
                "full_name": "__main__.Currency_Address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Currency_Address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Currency_Address.ImplicitArgs": {
                "full_name": "__main__.Currency_Address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Currency_Address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Currency_Address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Currency_Address.addr": {
                "decorators": [],
                "pc": 2622,
                "type": "function"
            },
            "__main__.Currency_Address.addr.Args": {
                "full_name": "__main__.Currency_Address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Currency_Address.addr.ImplicitArgs": {
                "full_name": "__main__.Currency_Address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Currency_Address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Currency_Address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Currency_Address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Currency_Address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Currency_Address.read": {
                "decorators": [],
                "pc": 2627,
                "type": "function"
            },
            "__main__.Currency_Address.read.Args": {
                "full_name": "__main__.Currency_Address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Currency_Address.read.ImplicitArgs": {
                "full_name": "__main__.Currency_Address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Currency_Address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "__main__.Currency_Address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Currency_Address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Currency_Address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Currency_Address.write": {
                "decorators": [],
                "pc": 2640,
                "type": "function"
            },
            "__main__.Currency_Address.write.Args": {
                "full_name": "__main__.Currency_Address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Currency_Address.write.ImplicitArgs": {
                "full_name": "__main__.Currency_Address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Currency_Address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Currency_Address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ERC165": {
                "destination": "openzeppelin.introspection.erc165.library.ERC165",
                "type": "alias"
            },
            "__main__.ERC721": {
                "destination": "openzeppelin.token.erc721.library.ERC721",
                "type": "alias"
            },
            "__main__.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.IERC20": {
                "destination": "openzeppelin.token.erc20.IERC20.IERC20",
                "type": "alias"
            },
            "__main__.MAX_SUPPLY": {
                "type": "const",
                "value": 444
            },
            "__main__.Merkle_Root": {
                "type": "namespace"
            },
            "__main__.Merkle_Root.Args": {
                "full_name": "__main__.Merkle_Root.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Merkle_Root.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Merkle_Root.ImplicitArgs": {
                "full_name": "__main__.Merkle_Root.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Merkle_Root.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Merkle_Root.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Merkle_Root.addr": {
                "decorators": [],
                "pc": 2835,
                "type": "function"
            },
            "__main__.Merkle_Root.addr.Args": {
                "full_name": "__main__.Merkle_Root.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Merkle_Root.addr.ImplicitArgs": {
                "full_name": "__main__.Merkle_Root.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Merkle_Root.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Merkle_Root.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Merkle_Root.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Merkle_Root.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Merkle_Root.read": {
                "decorators": [],
                "pc": 2840,
                "type": "function"
            },
            "__main__.Merkle_Root.read.Args": {
                "full_name": "__main__.Merkle_Root.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Merkle_Root.read.ImplicitArgs": {
                "full_name": "__main__.Merkle_Root.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Merkle_Root.read.Return": {
                "cairo_type": "(root: felt)",
                "type": "type_definition"
            },
            "__main__.Merkle_Root.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Merkle_Root.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Merkle_Root.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Merkle_Root.write": {
                "decorators": [],
                "pc": 2853,
                "type": "function"
            },
            "__main__.Merkle_Root.write.Args": {
                "full_name": "__main__.Merkle_Root.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Merkle_Root.write.ImplicitArgs": {
                "full_name": "__main__.Merkle_Root.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Merkle_Root.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Merkle_Root.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Mint_Price": {
                "type": "namespace"
            },
            "__main__.Mint_Price.Args": {
                "full_name": "__main__.Mint_Price.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Mint_Price.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Mint_Price.ImplicitArgs": {
                "full_name": "__main__.Mint_Price.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Mint_Price.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Mint_Price.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Mint_Price.addr": {
                "decorators": [],
                "pc": 2581,
                "type": "function"
            },
            "__main__.Mint_Price.addr.Args": {
                "full_name": "__main__.Mint_Price.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Mint_Price.addr.ImplicitArgs": {
                "full_name": "__main__.Mint_Price.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Mint_Price.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Mint_Price.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Mint_Price.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Mint_Price.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Mint_Price.read": {
                "decorators": [],
                "pc": 2586,
                "type": "function"
            },
            "__main__.Mint_Price.read.Args": {
                "full_name": "__main__.Mint_Price.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Mint_Price.read.ImplicitArgs": {
                "full_name": "__main__.Mint_Price.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Mint_Price.read.Return": {
                "cairo_type": "(price: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.Mint_Price.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Mint_Price.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Mint_Price.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Mint_Price.write": {
                "decorators": [],
                "pc": 2605,
                "type": "function"
            },
            "__main__.Mint_Price.write.Args": {
                "full_name": "__main__.Mint_Price.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Mint_Price.write.ImplicitArgs": {
                "full_name": "__main__.Mint_Price.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Mint_Price.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Mint_Price.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Ownable": {
                "destination": "openzeppelin.access.ownable.library.Ownable",
                "type": "alias"
            },
            "__main__.PER_PUBLIC_ADDRESS": {
                "type": "const",
                "value": 1
            },
            "__main__.PER_WL_ADDRESS": {
                "type": "const",
                "value": 1
            },
            "__main__.PUBLIC_SUPPLY": {
                "type": "const",
                "value": 320
            },
            "__main__.Pausable": {
                "destination": "openzeppelin.security.pausable.library.Pausable",
                "type": "alias"
            },
            "__main__.Public_Mint_State": {
                "type": "namespace"
            },
            "__main__.Public_Mint_State.Args": {
                "full_name": "__main__.Public_Mint_State.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Public_Mint_State.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Public_Mint_State.ImplicitArgs": {
                "full_name": "__main__.Public_Mint_State.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Public_Mint_State.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Public_Mint_State.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Public_Mint_State.addr": {
                "decorators": [],
                "pc": 2652,
                "type": "function"
            },
            "__main__.Public_Mint_State.addr.Args": {
                "full_name": "__main__.Public_Mint_State.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Public_Mint_State.addr.ImplicitArgs": {
                "full_name": "__main__.Public_Mint_State.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Public_Mint_State.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Public_Mint_State.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Public_Mint_State.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Public_Mint_State.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Public_Mint_State.read": {
                "decorators": [],
                "pc": 2657,
                "type": "function"
            },
            "__main__.Public_Mint_State.read.Args": {
                "full_name": "__main__.Public_Mint_State.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Public_Mint_State.read.ImplicitArgs": {
                "full_name": "__main__.Public_Mint_State.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Public_Mint_State.read.Return": {
                "cairo_type": "(p_state: felt)",
                "type": "type_definition"
            },
            "__main__.Public_Mint_State.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Public_Mint_State.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Public_Mint_State.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Public_Mint_State.write": {
                "decorators": [],
                "pc": 2670,
                "type": "function"
            },
            "__main__.Public_Mint_State.write.Args": {
                "full_name": "__main__.Public_Mint_State.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Public_Mint_State.write.ImplicitArgs": {
                "full_name": "__main__.Public_Mint_State.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Public_Mint_State.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Public_Mint_State.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.RoyalityInfo": {
                "full_name": "__main__.RoyalityInfo",
                "members": {
                    "receiver": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "royality_fee": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Royality_Info": {
                "type": "namespace"
            },
            "__main__.Royality_Info.Args": {
                "full_name": "__main__.Royality_Info.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Royality_Info.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Royality_Info.ImplicitArgs": {
                "full_name": "__main__.Royality_Info.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Royality_Info.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Royality_Info.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Royality_Info.addr": {
                "decorators": [],
                "pc": 2783,
                "type": "function"
            },
            "__main__.Royality_Info.addr.Args": {
                "full_name": "__main__.Royality_Info.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Royality_Info.addr.ImplicitArgs": {
                "full_name": "__main__.Royality_Info.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Royality_Info.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Royality_Info.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Royality_Info.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Royality_Info.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Royality_Info.read": {
                "decorators": [],
                "pc": 2788,
                "type": "function"
            },
            "__main__.Royality_Info.read.Args": {
                "full_name": "__main__.Royality_Info.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Royality_Info.read.ImplicitArgs": {
                "full_name": "__main__.Royality_Info.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Royality_Info.read.Return": {
                "cairo_type": "(info: __main__.RoyalityInfo)",
                "type": "type_definition"
            },
            "__main__.Royality_Info.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Royality_Info.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Royality_Info.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Royality_Info.write": {
                "decorators": [],
                "pc": 2813,
                "type": "function"
            },
            "__main__.Royality_Info.write.Args": {
                "full_name": "__main__.Royality_Info.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "__main__.RoyalityInfo",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Royality_Info.write.ImplicitArgs": {
                "full_name": "__main__.Royality_Info.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Royality_Info.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Royality_Info.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.StringCodec": {
                "destination": "src.contracts.lib.string.ASCII.StringCodec",
                "type": "alias"
            },
            "__main__.TEAM_SUPPLY": {
                "type": "const",
                "value": 22
            },
            "__main__.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "__main__.Total_Supply": {
                "type": "namespace"
            },
            "__main__.Total_Supply.Args": {
                "full_name": "__main__.Total_Supply.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Total_Supply.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Total_Supply.ImplicitArgs": {
                "full_name": "__main__.Total_Supply.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Total_Supply.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Total_Supply.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Total_Supply.addr": {
                "decorators": [],
                "pc": 2753,
                "type": "function"
            },
            "__main__.Total_Supply.addr.Args": {
                "full_name": "__main__.Total_Supply.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Total_Supply.addr.ImplicitArgs": {
                "full_name": "__main__.Total_Supply.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Total_Supply.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Total_Supply.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Total_Supply.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Total_Supply.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Total_Supply.read": {
                "decorators": [],
                "pc": 2758,
                "type": "function"
            },
            "__main__.Total_Supply.read.Args": {
                "full_name": "__main__.Total_Supply.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Total_Supply.read.ImplicitArgs": {
                "full_name": "__main__.Total_Supply.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Total_Supply.read.Return": {
                "cairo_type": "(supply: felt)",
                "type": "type_definition"
            },
            "__main__.Total_Supply.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Total_Supply.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Total_Supply.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Total_Supply.write": {
                "decorators": [],
                "pc": 2771,
                "type": "function"
            },
            "__main__.Total_Supply.write.Args": {
                "full_name": "__main__.Total_Supply.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Total_Supply.write.ImplicitArgs": {
                "full_name": "__main__.Total_Supply.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Total_Supply.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Total_Supply.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "__main__.WL_SUPPLY": {
                "type": "const",
                "value": 102
            },
            "__main__.Whitelist_Mint_State": {
                "type": "namespace"
            },
            "__main__.Whitelist_Mint_State.Args": {
                "full_name": "__main__.Whitelist_Mint_State.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.Whitelist_Mint_State.ImplicitArgs": {
                "full_name": "__main__.Whitelist_Mint_State.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Whitelist_Mint_State.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Whitelist_Mint_State.addr": {
                "decorators": [],
                "pc": 2682,
                "type": "function"
            },
            "__main__.Whitelist_Mint_State.addr.Args": {
                "full_name": "__main__.Whitelist_Mint_State.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.addr.ImplicitArgs": {
                "full_name": "__main__.Whitelist_Mint_State.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.Whitelist_Mint_State.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Whitelist_Mint_State.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.Whitelist_Mint_State.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "__main__.Whitelist_Mint_State.read": {
                "decorators": [],
                "pc": 2687,
                "type": "function"
            },
            "__main__.Whitelist_Mint_State.read.Args": {
                "full_name": "__main__.Whitelist_Mint_State.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.read.ImplicitArgs": {
                "full_name": "__main__.Whitelist_Mint_State.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.read.Return": {
                "cairo_type": "(wl_state: felt)",
                "type": "type_definition"
            },
            "__main__.Whitelist_Mint_State.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.Whitelist_Mint_State.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "__main__.Whitelist_Mint_State.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "__main__.Whitelist_Mint_State.write": {
                "decorators": [],
                "pc": 2700,
                "type": "function"
            },
            "__main__.Whitelist_Mint_State.write.Args": {
                "full_name": "__main__.Whitelist_Mint_State.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.write.ImplicitArgs": {
                "full_name": "__main__.Whitelist_Mint_State.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.Whitelist_Mint_State.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Whitelist_Mint_State.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._exists": {
                "decorators": [],
                "pc": 4492,
                "type": "function"
            },
            "__main__._exists.Args": {
                "full_name": "__main__._exists.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__._exists.ImplicitArgs": {
                "full_name": "__main__._exists.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._exists.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "__main__._exists.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._hash_sorted": {
                "destination": "src.contracts.lib.merkle.merkle._hash_sorted",
                "type": "alias"
            },
            "__main__._mint": {
                "decorators": [],
                "pc": 4513,
                "type": "function"
            },
            "__main__._mint.Args": {
                "full_name": "__main__._mint.Args",
                "members": {
                    "_tokenId": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__._mint.ImplicitArgs": {
                "full_name": "__main__._mint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._mint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._mint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._set_base_uri": {
                "decorators": [],
                "pc": 4526,
                "type": "function"
            },
            "__main__._set_base_uri.Args": {
                "full_name": "__main__._set_base_uri.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "ipfs_uri": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "ipfs_uri_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._set_base_uri.ImplicitArgs": {
                "full_name": "__main__._set_base_uri.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._set_base_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._set_base_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._teamMint": {
                "decorators": [],
                "pc": 4462,
                "type": "function"
            },
            "__main__._teamMint.Args": {
                "full_name": "__main__._teamMint.Args",
                "members": {
                    "index": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "wallet_addresses": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "wallet_addresses_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._teamMint.ImplicitArgs": {
                "full_name": "__main__._teamMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._teamMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._teamMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._tokenUri": {
                "decorators": [],
                "pc": 4549,
                "type": "function"
            },
            "__main__._tokenUri.Args": {
                "full_name": "__main__._tokenUri.Args",
                "members": {
                    "token_uri": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "token_uri_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "uri_count": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._tokenUri.ImplicitArgs": {
                "full_name": "__main__._tokenUri.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._tokenUri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._tokenUri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__._uint_to_felt": {
                "decorators": [],
                "pc": 4575,
                "type": "function"
            },
            "__main__._uint_to_felt.Args": {
                "full_name": "__main__._uint_to_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__._uint_to_felt.ImplicitArgs": {
                "full_name": "__main__._uint_to_felt.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._uint_to_felt.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "__main__._uint_to_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.addresses_to_leafs": {
                "destination": "src.contracts.lib.merkle.merkle.addresses_to_leafs",
                "type": "alias"
            },
            "__main__.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.approve": {
                "decorators": [
                    "external"
                ],
                "pc": 3643,
                "type": "function"
            },
            "__main__.approve.Args": {
                "full_name": "__main__.approve.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.approve.ImplicitArgs": {
                "full_name": "__main__.approve.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.approve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "__main__.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "__main__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3043,
                "type": "function"
            },
            "__main__.balanceOf.Args": {
                "full_name": "__main__.balanceOf.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.balanceOf.ImplicitArgs": {
                "full_name": "__main__.balanceOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.balanceOf.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.baseUri": {
                "decorators": [
                    "view"
                ],
                "pc": 3437,
                "type": "function"
            },
            "__main__.baseUri.Args": {
                "full_name": "__main__.baseUri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.baseUri.ImplicitArgs": {
                "full_name": "__main__.baseUri.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.baseUri.Return": {
                "cairo_type": "(uri_len: felt, uri: felt*)",
                "type": "type_definition"
            },
            "__main__.baseUri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.burn": {
                "decorators": [
                    "external"
                ],
                "pc": 4401,
                "type": "function"
            },
            "__main__.burn.Args": {
                "full_name": "__main__.burn.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.burn.ImplicitArgs": {
                "full_name": "__main__.burn.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.burn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.burn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.concat_arr": {
                "destination": "src.contracts.lib.array.array.concat_arr",
                "type": "alias"
            },
            "__main__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 2865,
                "type": "function"
            },
            "__main__.constructor.Args": {
                "full_name": "__main__.constructor.Args",
                "members": {
                    "base_uri": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "base_uri_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "currency_address": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "json_extension": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "mint_price": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 7
                    },
                    "name": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "root": {
                        "cairo_type": "felt",
                        "offset": 9
                    },
                    "symbol": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "wallet_addresses": {
                        "cairo_type": "felt*",
                        "offset": 11
                    },
                    "wallet_addresses_len": {
                        "cairo_type": "felt",
                        "offset": 10
                    }
                },
                "size": 12,
                "type": "struct"
            },
            "__main__.constructor.ImplicitArgs": {
                "full_name": "__main__.constructor.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.constructor.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.constructor.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.currencyAddress": {
                "decorators": [
                    "view"
                ],
                "pc": 3407,
                "type": "function"
            },
            "__main__.currencyAddress.Args": {
                "full_name": "__main__.currencyAddress.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.currencyAddress.ImplicitArgs": {
                "full_name": "__main__.currencyAddress.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.currencyAddress.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "__main__.currencyAddress.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.getApproved": {
                "decorators": [
                    "view"
                ],
                "pc": 3114,
                "type": "function"
            },
            "__main__.getApproved.Args": {
                "full_name": "__main__.getApproved.Args",
                "members": {
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.getApproved.ImplicitArgs": {
                "full_name": "__main__.getApproved.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.getApproved.Return": {
                "cairo_type": "(approved: felt)",
                "type": "type_definition"
            },
            "__main__.getApproved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "__main__.get_contract_address": {
                "destination": "starkware.starknet.common.syscalls.get_contract_address",
                "type": "alias"
            },
            "__main__.get_tx_info": {
                "destination": "starkware.starknet.common.syscalls.get_tx_info",
                "type": "alias"
            },
            "__main__.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "__main__.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 3150,
                "type": "function"
            },
            "__main__.isApprovedForAll.Args": {
                "full_name": "__main__.isApprovedForAll.Args",
                "members": {
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.isApprovedForAll.ImplicitArgs": {
                "full_name": "__main__.isApprovedForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.isApprovedForAll.Return": {
                "cairo_type": "(isApproved: felt)",
                "type": "type_definition"
            },
            "__main__.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.isPublicMintActive": {
                "decorators": [
                    "view"
                ],
                "pc": 3553,
                "type": "function"
            },
            "__main__.isPublicMintActive.Args": {
                "full_name": "__main__.isPublicMintActive.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.isPublicMintActive.ImplicitArgs": {
                "full_name": "__main__.isPublicMintActive.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.isPublicMintActive.Return": {
                "cairo_type": "(p_state: felt)",
                "type": "type_definition"
            },
            "__main__.isPublicMintActive.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.isWhitelistMintActive": {
                "decorators": [
                    "view"
                ],
                "pc": 3583,
                "type": "function"
            },
            "__main__.isWhitelistMintActive.Args": {
                "full_name": "__main__.isWhitelistMintActive.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.isWhitelistMintActive.ImplicitArgs": {
                "full_name": "__main__.isWhitelistMintActive.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.isWhitelistMintActive.Return": {
                "cairo_type": "(wl_state: felt)",
                "type": "type_definition"
            },
            "__main__.isWhitelistMintActive.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.is_not_zero": {
                "destination": "starkware.cairo.common.math_cmp.is_not_zero",
                "type": "alias"
            },
            "__main__.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.merkleRoot": {
                "decorators": [
                    "view"
                ],
                "pc": 3613,
                "type": "function"
            },
            "__main__.merkleRoot.Args": {
                "full_name": "__main__.merkleRoot.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.merkleRoot.ImplicitArgs": {
                "full_name": "__main__.merkleRoot.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.merkleRoot.Return": {
                "cairo_type": "(root: felt)",
                "type": "type_definition"
            },
            "__main__.merkleRoot.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.merkle_build": {
                "destination": "src.contracts.lib.merkle.merkle.merkle_build",
                "type": "alias"
            },
            "__main__.merkle_verify": {
                "destination": "src.contracts.lib.merkle.merkle.merkle_verify",
                "type": "alias"
            },
            "__main__.mintPrice": {
                "decorators": [
                    "view"
                ],
                "pc": 3376,
                "type": "function"
            },
            "__main__.mintPrice.Args": {
                "full_name": "__main__.mintPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.mintPrice.ImplicitArgs": {
                "full_name": "__main__.mintPrice.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.mintPrice.Return": {
                "cairo_type": "(price: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.mintPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 2983,
                "type": "function"
            },
            "__main__.name.Args": {
                "full_name": "__main__.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.name.ImplicitArgs": {
                "full_name": "__main__.name.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.name.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "__main__.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.owner": {
                "decorators": [
                    "view"
                ],
                "pc": 3316,
                "type": "function"
            },
            "__main__.owner.Args": {
                "full_name": "__main__.owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.owner.ImplicitArgs": {
                "full_name": "__main__.owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.owner.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "__main__.owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.ownerOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3078,
                "type": "function"
            },
            "__main__.ownerOf.Args": {
                "full_name": "__main__.ownerOf.Args",
                "members": {
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.ownerOf.ImplicitArgs": {
                "full_name": "__main__.ownerOf.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.ownerOf.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "__main__.ownerOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.pause": {
                "decorators": [
                    "external"
                ],
                "pc": 4076,
                "type": "function"
            },
            "__main__.pause.Args": {
                "full_name": "__main__.pause.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.pause.ImplicitArgs": {
                "full_name": "__main__.pause.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.pause.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.pause.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.paused": {
                "decorators": [
                    "view"
                ],
                "pc": 3346,
                "type": "function"
            },
            "__main__.paused.Args": {
                "full_name": "__main__.paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.paused.ImplicitArgs": {
                "full_name": "__main__.paused.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.paused.Return": {
                "cairo_type": "(paused: felt)",
                "type": "type_definition"
            },
            "__main__.paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.publicMint": {
                "decorators": [
                    "external"
                ],
                "pc": 3923,
                "type": "function"
            },
            "__main__.publicMint.Args": {
                "full_name": "__main__.publicMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.publicMint.ImplicitArgs": {
                "full_name": "__main__.publicMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.publicMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.publicMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.renounceOwnership": {
                "decorators": [
                    "external"
                ],
                "pc": 4053,
                "type": "function"
            },
            "__main__.renounceOwnership.Args": {
                "full_name": "__main__.renounceOwnership.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.renounceOwnership.ImplicitArgs": {
                "full_name": "__main__.renounceOwnership.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.renounceOwnership.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.renounceOwnership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.royalityInfo": {
                "decorators": [
                    "view"
                ],
                "pc": 3498,
                "type": "function"
            },
            "__main__.royalityInfo.Args": {
                "full_name": "__main__.royalityInfo.Args",
                "members": {
                    "_sale_price": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.royalityInfo.ImplicitArgs": {
                "full_name": "__main__.royalityInfo.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.royalityInfo.Return": {
                "cairo_type": "(receiver: felt, royalitytAmount: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "__main__.royalityInfo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.safeTransferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 3742,
                "type": "function"
            },
            "__main__.safeTransferFrom.Args": {
                "full_name": "__main__.safeTransferFrom.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "__main__.safeTransferFrom.ImplicitArgs": {
                "full_name": "__main__.safeTransferFrom.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.safeTransferFrom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.safeTransferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 3677,
                "type": "function"
            },
            "__main__.setApprovalForAll.Args": {
                "full_name": "__main__.setApprovalForAll.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.setApprovalForAll.ImplicitArgs": {
                "full_name": "__main__.setApprovalForAll.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setCurrencyAddress": {
                "decorators": [
                    "external"
                ],
                "pc": 4259,
                "type": "function"
            },
            "__main__.setCurrencyAddress.Args": {
                "full_name": "__main__.setCurrencyAddress.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.setCurrencyAddress.ImplicitArgs": {
                "full_name": "__main__.setCurrencyAddress.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setCurrencyAddress.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setCurrencyAddress.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setMerkleRoot": {
                "decorators": [
                    "external"
                ],
                "pc": 4432,
                "type": "function"
            },
            "__main__.setMerkleRoot.Args": {
                "full_name": "__main__.setMerkleRoot.Args",
                "members": {
                    "root": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.setMerkleRoot.ImplicitArgs": {
                "full_name": "__main__.setMerkleRoot.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setMerkleRoot.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setMerkleRoot.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setMintPrice": {
                "decorators": [
                    "external"
                ],
                "pc": 4227,
                "type": "function"
            },
            "__main__.setMintPrice.Args": {
                "full_name": "__main__.setMintPrice.Args",
                "members": {
                    "_price": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.setMintPrice.ImplicitArgs": {
                "full_name": "__main__.setMintPrice.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setMintPrice.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setMintPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setRoyaltyInfo": {
                "decorators": [
                    "external"
                ],
                "pc": 4191,
                "type": "function"
            },
            "__main__.setRoyaltyInfo.Args": {
                "full_name": "__main__.setRoyaltyInfo.Args",
                "members": {
                    "_receipt": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "_royality_fee": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setRoyaltyInfo.ImplicitArgs": {
                "full_name": "__main__.setRoyaltyInfo.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setRoyaltyInfo.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setRoyaltyInfo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.setTokenUriExtension": {
                "decorators": [
                    "external"
                ],
                "pc": 4164,
                "type": "function"
            },
            "__main__.setTokenUriExtension.Args": {
                "full_name": "__main__.setTokenUriExtension.Args",
                "members": {
                    "extension": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.setTokenUriExtension.ImplicitArgs": {
                "full_name": "__main__.setTokenUriExtension.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.setTokenUriExtension.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.setTokenUriExtension.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.set_base_uri": {
                "decorators": [
                    "external"
                ],
                "pc": 4122,
                "type": "function"
            },
            "__main__.set_base_uri.Args": {
                "full_name": "__main__.set_base_uri.Args",
                "members": {
                    "ipfs_uri": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "ipfs_uri_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.set_base_uri.ImplicitArgs": {
                "full_name": "__main__.set_base_uri.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.set_base_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.set_base_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "__main__.startPublicMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4289,
                "type": "function"
            },
            "__main__.startPublicMint.Args": {
                "full_name": "__main__.startPublicMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.startPublicMint.ImplicitArgs": {
                "full_name": "__main__.startPublicMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.startPublicMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.startPublicMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.startWlMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4345,
                "type": "function"
            },
            "__main__.startWlMint.Args": {
                "full_name": "__main__.startWlMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.startWlMint.ImplicitArgs": {
                "full_name": "__main__.startWlMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.startWlMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.startWlMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.stopPublicMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4317,
                "type": "function"
            },
            "__main__.stopPublicMint.Args": {
                "full_name": "__main__.stopPublicMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.stopPublicMint.ImplicitArgs": {
                "full_name": "__main__.stopPublicMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.stopPublicMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.stopPublicMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.stopWlMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4373,
                "type": "function"
            },
            "__main__.stopWlMint.Args": {
                "full_name": "__main__.stopWlMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.stopWlMint.ImplicitArgs": {
                "full_name": "__main__.stopWlMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.stopWlMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.stopWlMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 2949,
                "type": "function"
            },
            "__main__.supportsInterface.Args": {
                "full_name": "__main__.supportsInterface.Args",
                "members": {
                    "interfaceId": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.supportsInterface.ImplicitArgs": {
                "full_name": "__main__.supportsInterface.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.supportsInterface.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "__main__.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 3013,
                "type": "function"
            },
            "__main__.symbol.Args": {
                "full_name": "__main__.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.symbol.ImplicitArgs": {
                "full_name": "__main__.symbol.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.symbol.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "__main__.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.tokenURI": {
                "decorators": [
                    "view"
                ],
                "pc": 3216,
                "type": "function"
            },
            "__main__.tokenURI.Args": {
                "full_name": "__main__.tokenURI.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.tokenURI.ImplicitArgs": {
                "full_name": "__main__.tokenURI.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.tokenURI.Return": {
                "cairo_type": "(token_uri_len: felt, token_uri: felt*)",
                "type": "type_definition"
            },
            "__main__.tokenURI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 5
            },
            "__main__.totalSupply": {
                "decorators": [
                    "view"
                ],
                "pc": 3186,
                "type": "function"
            },
            "__main__.totalSupply.Args": {
                "full_name": "__main__.totalSupply.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.totalSupply.ImplicitArgs": {
                "full_name": "__main__.totalSupply.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.totalSupply.Return": {
                "cairo_type": "(supply: felt)",
                "type": "type_definition"
            },
            "__main__.totalSupply.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.transferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 3706,
                "type": "function"
            },
            "__main__.transferFrom.Args": {
                "full_name": "__main__.transferFrom.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.transferFrom.ImplicitArgs": {
                "full_name": "__main__.transferFrom.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.transferFrom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.transferOwnership": {
                "decorators": [
                    "external"
                ],
                "pc": 4026,
                "type": "function"
            },
            "__main__.transferOwnership.Args": {
                "full_name": "__main__.transferOwnership.Args",
                "members": {
                    "newOwner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.transferOwnership.ImplicitArgs": {
                "full_name": "__main__.transferOwnership.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.transferOwnership.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.transferOwnership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.uint256_le": {
                "destination": "starkware.cairo.common.uint256.uint256_le",
                "type": "alias"
            },
            "__main__.uint256_mul_div_mod": {
                "destination": "starkware.cairo.common.uint256.uint256_mul_div_mod",
                "type": "alias"
            },
            "__main__.unpause": {
                "decorators": [
                    "external"
                ],
                "pc": 4099,
                "type": "function"
            },
            "__main__.unpause.Args": {
                "full_name": "__main__.unpause.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.unpause.ImplicitArgs": {
                "full_name": "__main__.unpause.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.unpause.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.unpause.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.wlMint": {
                "decorators": [
                    "external"
                ],
                "pc": 3790,
                "type": "function"
            },
            "__main__.wlMint.Args": {
                "full_name": "__main__.wlMint.Args",
                "members": {
                    "proof": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "proof_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__.wlMint.ImplicitArgs": {
                "full_name": "__main__.wlMint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.wlMint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.wlMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 8
            },
            "__wrappers__.approve": {
                "decorators": [
                    "external"
                ],
                "pc": 3657,
                "type": "function"
            },
            "__wrappers__.approve.Args": {
                "full_name": "__wrappers__.approve.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.approve.ImplicitArgs": {
                "full_name": "__wrappers__.approve.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.approve.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.approve.__wrapped_func": {
                "destination": "__main__.approve",
                "type": "alias"
            },
            "__wrappers__.approve_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.balanceOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3060,
                "type": "function"
            },
            "__wrappers__.balanceOf.Args": {
                "full_name": "__wrappers__.balanceOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.balanceOf.__wrapped_func": {
                "destination": "__main__.balanceOf",
                "type": "alias"
            },
            "__wrappers__.balanceOf_encode_return": {
                "decorators": [],
                "pc": 3050,
                "type": "function"
            },
            "__wrappers__.balanceOf_encode_return.Args": {
                "full_name": "__wrappers__.balanceOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.balanceOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.balanceOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.baseUri": {
                "decorators": [
                    "view"
                ],
                "pc": 3479,
                "type": "function"
            },
            "__wrappers__.baseUri.Args": {
                "full_name": "__wrappers__.baseUri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.baseUri.ImplicitArgs": {
                "full_name": "__wrappers__.baseUri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.baseUri.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.baseUri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.baseUri.__wrapped_func": {
                "destination": "__main__.baseUri",
                "type": "alias"
            },
            "__wrappers__.baseUri_encode_return": {
                "decorators": [],
                "pc": 3460,
                "type": "function"
            },
            "__wrappers__.baseUri_encode_return.Args": {
                "full_name": "__wrappers__.baseUri_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(uri_len: felt, uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.baseUri_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.baseUri_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.baseUri_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.baseUri_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.baseUri_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.burn": {
                "decorators": [
                    "external"
                ],
                "pc": 4413,
                "type": "function"
            },
            "__wrappers__.burn.Args": {
                "full_name": "__wrappers__.burn.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.burn.ImplicitArgs": {
                "full_name": "__wrappers__.burn.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.burn.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.burn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.burn.__wrapped_func": {
                "destination": "__main__.burn",
                "type": "alias"
            },
            "__wrappers__.burn_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 2904,
                "type": "function"
            },
            "__wrappers__.constructor.Args": {
                "full_name": "__wrappers__.constructor.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.ImplicitArgs": {
                "full_name": "__wrappers__.constructor.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.constructor.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.constructor.__wrapped_func": {
                "destination": "__main__.constructor",
                "type": "alias"
            },
            "__wrappers__.constructor_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.currencyAddress": {
                "decorators": [
                    "view"
                ],
                "pc": 3422,
                "type": "function"
            },
            "__wrappers__.currencyAddress.Args": {
                "full_name": "__wrappers__.currencyAddress.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.currencyAddress.ImplicitArgs": {
                "full_name": "__wrappers__.currencyAddress.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.currencyAddress.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.currencyAddress.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.currencyAddress.__wrapped_func": {
                "destination": "__main__.currencyAddress",
                "type": "alias"
            },
            "__wrappers__.currencyAddress_encode_return": {
                "decorators": [],
                "pc": 3413,
                "type": "function"
            },
            "__wrappers__.currencyAddress_encode_return.Args": {
                "full_name": "__wrappers__.currencyAddress_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.currencyAddress_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.currencyAddress_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.currencyAddress_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.currencyAddress_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.currencyAddress_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getApproved": {
                "decorators": [
                    "view"
                ],
                "pc": 3131,
                "type": "function"
            },
            "__wrappers__.getApproved.Args": {
                "full_name": "__wrappers__.getApproved.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved.ImplicitArgs": {
                "full_name": "__wrappers__.getApproved.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getApproved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getApproved.__wrapped_func": {
                "destination": "__main__.getApproved",
                "type": "alias"
            },
            "__wrappers__.getApproved_encode_return": {
                "decorators": [],
                "pc": 3122,
                "type": "function"
            },
            "__wrappers__.getApproved_encode_return.Args": {
                "full_name": "__wrappers__.getApproved_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(approved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getApproved_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getApproved_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getApproved_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getApproved_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getApproved_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll": {
                "decorators": [
                    "view"
                ],
                "pc": 3167,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll.Args": {
                "full_name": "__wrappers__.isApprovedForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isApprovedForAll.__wrapped_func": {
                "destination": "__main__.isApprovedForAll",
                "type": "alias"
            },
            "__wrappers__.isApprovedForAll_encode_return": {
                "decorators": [],
                "pc": 3158,
                "type": "function"
            },
            "__wrappers__.isApprovedForAll_encode_return.Args": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(isApproved: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isApprovedForAll_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isApprovedForAll_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isApprovedForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isPublicMintActive": {
                "decorators": [
                    "view"
                ],
                "pc": 3568,
                "type": "function"
            },
            "__wrappers__.isPublicMintActive.Args": {
                "full_name": "__wrappers__.isPublicMintActive.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isPublicMintActive.ImplicitArgs": {
                "full_name": "__wrappers__.isPublicMintActive.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isPublicMintActive.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isPublicMintActive.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isPublicMintActive.__wrapped_func": {
                "destination": "__main__.isPublicMintActive",
                "type": "alias"
            },
            "__wrappers__.isPublicMintActive_encode_return": {
                "decorators": [],
                "pc": 3559,
                "type": "function"
            },
            "__wrappers__.isPublicMintActive_encode_return.Args": {
                "full_name": "__wrappers__.isPublicMintActive_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(p_state: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isPublicMintActive_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isPublicMintActive_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isPublicMintActive_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isPublicMintActive_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isPublicMintActive_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.isWhitelistMintActive": {
                "decorators": [
                    "view"
                ],
                "pc": 3598,
                "type": "function"
            },
            "__wrappers__.isWhitelistMintActive.Args": {
                "full_name": "__wrappers__.isWhitelistMintActive.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isWhitelistMintActive.ImplicitArgs": {
                "full_name": "__wrappers__.isWhitelistMintActive.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isWhitelistMintActive.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isWhitelistMintActive.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.isWhitelistMintActive.__wrapped_func": {
                "destination": "__main__.isWhitelistMintActive",
                "type": "alias"
            },
            "__wrappers__.isWhitelistMintActive_encode_return": {
                "decorators": [],
                "pc": 3589,
                "type": "function"
            },
            "__wrappers__.isWhitelistMintActive_encode_return.Args": {
                "full_name": "__wrappers__.isWhitelistMintActive_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(wl_state: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.isWhitelistMintActive_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.isWhitelistMintActive_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.isWhitelistMintActive_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.isWhitelistMintActive_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.isWhitelistMintActive_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.merkleRoot": {
                "decorators": [
                    "view"
                ],
                "pc": 3628,
                "type": "function"
            },
            "__wrappers__.merkleRoot.Args": {
                "full_name": "__wrappers__.merkleRoot.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.merkleRoot.ImplicitArgs": {
                "full_name": "__wrappers__.merkleRoot.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.merkleRoot.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.merkleRoot.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.merkleRoot.__wrapped_func": {
                "destination": "__main__.merkleRoot",
                "type": "alias"
            },
            "__wrappers__.merkleRoot_encode_return": {
                "decorators": [],
                "pc": 3619,
                "type": "function"
            },
            "__wrappers__.merkleRoot_encode_return.Args": {
                "full_name": "__wrappers__.merkleRoot_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(root: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.merkleRoot_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.merkleRoot_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.merkleRoot_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.merkleRoot_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.merkleRoot_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.mintPrice": {
                "decorators": [
                    "view"
                ],
                "pc": 3392,
                "type": "function"
            },
            "__wrappers__.mintPrice.Args": {
                "full_name": "__wrappers__.mintPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintPrice.ImplicitArgs": {
                "full_name": "__wrappers__.mintPrice.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintPrice.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mintPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.mintPrice.__wrapped_func": {
                "destination": "__main__.mintPrice",
                "type": "alias"
            },
            "__wrappers__.mintPrice_encode_return": {
                "decorators": [],
                "pc": 3382,
                "type": "function"
            },
            "__wrappers__.mintPrice_encode_return.Args": {
                "full_name": "__wrappers__.mintPrice_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(price: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.mintPrice_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.mintPrice_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.mintPrice_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.mintPrice_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.mintPrice_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.name": {
                "decorators": [
                    "view"
                ],
                "pc": 2998,
                "type": "function"
            },
            "__wrappers__.name.Args": {
                "full_name": "__wrappers__.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name.ImplicitArgs": {
                "full_name": "__wrappers__.name.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.name.__wrapped_func": {
                "destination": "__main__.name",
                "type": "alias"
            },
            "__wrappers__.name_encode_return": {
                "decorators": [],
                "pc": 2989,
                "type": "function"
            },
            "__wrappers__.name_encode_return.Args": {
                "full_name": "__wrappers__.name_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(name: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.name_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.name_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.name_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.owner": {
                "decorators": [
                    "view"
                ],
                "pc": 3331,
                "type": "function"
            },
            "__wrappers__.owner.Args": {
                "full_name": "__wrappers__.owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.owner.ImplicitArgs": {
                "full_name": "__wrappers__.owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.owner.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.owner.__wrapped_func": {
                "destination": "__main__.owner",
                "type": "alias"
            },
            "__wrappers__.ownerOf": {
                "decorators": [
                    "view"
                ],
                "pc": 3095,
                "type": "function"
            },
            "__wrappers__.ownerOf.Args": {
                "full_name": "__wrappers__.ownerOf.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.ownerOf.__wrapped_func": {
                "destination": "__main__.ownerOf",
                "type": "alias"
            },
            "__wrappers__.ownerOf_encode_return": {
                "decorators": [],
                "pc": 3086,
                "type": "function"
            },
            "__wrappers__.ownerOf_encode_return.Args": {
                "full_name": "__wrappers__.ownerOf_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.ownerOf_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.ownerOf_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.ownerOf_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.ownerOf_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.ownerOf_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.owner_encode_return": {
                "decorators": [],
                "pc": 3322,
                "type": "function"
            },
            "__wrappers__.owner_encode_return.Args": {
                "full_name": "__wrappers__.owner_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(owner: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.owner_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.owner_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.owner_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.owner_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.owner_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.pause": {
                "decorators": [
                    "external"
                ],
                "pc": 4084,
                "type": "function"
            },
            "__wrappers__.pause.Args": {
                "full_name": "__wrappers__.pause.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.pause.ImplicitArgs": {
                "full_name": "__wrappers__.pause.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.pause.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.pause.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.pause.__wrapped_func": {
                "destination": "__main__.pause",
                "type": "alias"
            },
            "__wrappers__.pause_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.paused": {
                "decorators": [
                    "view"
                ],
                "pc": 3361,
                "type": "function"
            },
            "__wrappers__.paused.Args": {
                "full_name": "__wrappers__.paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.paused.ImplicitArgs": {
                "full_name": "__wrappers__.paused.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.paused.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.paused.__wrapped_func": {
                "destination": "__main__.paused",
                "type": "alias"
            },
            "__wrappers__.paused_encode_return": {
                "decorators": [],
                "pc": 3352,
                "type": "function"
            },
            "__wrappers__.paused_encode_return.Args": {
                "full_name": "__wrappers__.paused_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(paused: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.paused_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.paused_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.paused_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.paused_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.paused_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.publicMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4011,
                "type": "function"
            },
            "__wrappers__.publicMint.Args": {
                "full_name": "__wrappers__.publicMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.publicMint.ImplicitArgs": {
                "full_name": "__wrappers__.publicMint.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.publicMint.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.publicMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.publicMint.__wrapped_func": {
                "destination": "__main__.publicMint",
                "type": "alias"
            },
            "__wrappers__.publicMint_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.renounceOwnership": {
                "decorators": [
                    "external"
                ],
                "pc": 4061,
                "type": "function"
            },
            "__wrappers__.renounceOwnership.Args": {
                "full_name": "__wrappers__.renounceOwnership.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.renounceOwnership.ImplicitArgs": {
                "full_name": "__wrappers__.renounceOwnership.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.renounceOwnership.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.renounceOwnership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.renounceOwnership.__wrapped_func": {
                "destination": "__main__.renounceOwnership",
                "type": "alias"
            },
            "__wrappers__.renounceOwnership_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.royalityInfo": {
                "decorators": [
                    "view"
                ],
                "pc": 3534,
                "type": "function"
            },
            "__wrappers__.royalityInfo.Args": {
                "full_name": "__wrappers__.royalityInfo.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.royalityInfo.ImplicitArgs": {
                "full_name": "__wrappers__.royalityInfo.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.royalityInfo.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.royalityInfo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.royalityInfo.__wrapped_func": {
                "destination": "__main__.royalityInfo",
                "type": "alias"
            },
            "__wrappers__.royalityInfo_encode_return": {
                "decorators": [],
                "pc": 3523,
                "type": "function"
            },
            "__wrappers__.royalityInfo_encode_return.Args": {
                "full_name": "__wrappers__.royalityInfo_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "ret_value": {
                        "cairo_type": "(receiver: felt, royalitytAmount: starkware.cairo.common.uint256.Uint256)",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__wrappers__.royalityInfo_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.royalityInfo_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.royalityInfo_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.royalityInfo_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.royalityInfo_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 3759,
                "type": "function"
            },
            "__wrappers__.safeTransferFrom.Args": {
                "full_name": "__wrappers__.safeTransferFrom.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom.ImplicitArgs": {
                "full_name": "__wrappers__.safeTransferFrom.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.safeTransferFrom.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.safeTransferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.safeTransferFrom.__wrapped_func": {
                "destination": "__main__.safeTransferFrom",
                "type": "alias"
            },
            "__wrappers__.safeTransferFrom_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll": {
                "decorators": [
                    "external"
                ],
                "pc": 3687,
                "type": "function"
            },
            "__wrappers__.setApprovalForAll.Args": {
                "full_name": "__wrappers__.setApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.ImplicitArgs": {
                "full_name": "__wrappers__.setApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setApprovalForAll.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setApprovalForAll.__wrapped_func": {
                "destination": "__main__.setApprovalForAll",
                "type": "alias"
            },
            "__wrappers__.setApprovalForAll_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setCurrencyAddress": {
                "decorators": [
                    "external"
                ],
                "pc": 4271,
                "type": "function"
            },
            "__wrappers__.setCurrencyAddress.Args": {
                "full_name": "__wrappers__.setCurrencyAddress.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setCurrencyAddress.ImplicitArgs": {
                "full_name": "__wrappers__.setCurrencyAddress.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setCurrencyAddress.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setCurrencyAddress.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setCurrencyAddress.__wrapped_func": {
                "destination": "__main__.setCurrencyAddress",
                "type": "alias"
            },
            "__wrappers__.setCurrencyAddress_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setMerkleRoot": {
                "decorators": [
                    "external"
                ],
                "pc": 4444,
                "type": "function"
            },
            "__wrappers__.setMerkleRoot.Args": {
                "full_name": "__wrappers__.setMerkleRoot.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMerkleRoot.ImplicitArgs": {
                "full_name": "__wrappers__.setMerkleRoot.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMerkleRoot.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setMerkleRoot.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setMerkleRoot.__wrapped_func": {
                "destination": "__main__.setMerkleRoot",
                "type": "alias"
            },
            "__wrappers__.setMerkleRoot_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setMintPrice": {
                "decorators": [
                    "external"
                ],
                "pc": 4240,
                "type": "function"
            },
            "__wrappers__.setMintPrice.Args": {
                "full_name": "__wrappers__.setMintPrice.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMintPrice.ImplicitArgs": {
                "full_name": "__wrappers__.setMintPrice.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setMintPrice.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setMintPrice.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setMintPrice.__wrapped_func": {
                "destination": "__main__.setMintPrice",
                "type": "alias"
            },
            "__wrappers__.setMintPrice_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRoyaltyInfo": {
                "decorators": [
                    "external"
                ],
                "pc": 4207,
                "type": "function"
            },
            "__wrappers__.setRoyaltyInfo.Args": {
                "full_name": "__wrappers__.setRoyaltyInfo.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRoyaltyInfo.ImplicitArgs": {
                "full_name": "__wrappers__.setRoyaltyInfo.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRoyaltyInfo.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRoyaltyInfo.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRoyaltyInfo.__wrapped_func": {
                "destination": "__main__.setRoyaltyInfo",
                "type": "alias"
            },
            "__wrappers__.setRoyaltyInfo_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setTokenUriExtension": {
                "decorators": [
                    "external"
                ],
                "pc": 4173,
                "type": "function"
            },
            "__wrappers__.setTokenUriExtension.Args": {
                "full_name": "__wrappers__.setTokenUriExtension.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setTokenUriExtension.ImplicitArgs": {
                "full_name": "__wrappers__.setTokenUriExtension.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setTokenUriExtension.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setTokenUriExtension.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setTokenUriExtension.__wrapped_func": {
                "destination": "__main__.setTokenUriExtension",
                "type": "alias"
            },
            "__wrappers__.setTokenUriExtension_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.set_base_uri": {
                "decorators": [
                    "external"
                ],
                "pc": 4137,
                "type": "function"
            },
            "__wrappers__.set_base_uri.Args": {
                "full_name": "__wrappers__.set_base_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.set_base_uri.ImplicitArgs": {
                "full_name": "__wrappers__.set_base_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.set_base_uri.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.set_base_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.set_base_uri.__wrapped_func": {
                "destination": "__main__.set_base_uri",
                "type": "alias"
            },
            "__wrappers__.set_base_uri_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.startPublicMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4302,
                "type": "function"
            },
            "__wrappers__.startPublicMint.Args": {
                "full_name": "__wrappers__.startPublicMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.startPublicMint.ImplicitArgs": {
                "full_name": "__wrappers__.startPublicMint.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.startPublicMint.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.startPublicMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.startPublicMint.__wrapped_func": {
                "destination": "__main__.startPublicMint",
                "type": "alias"
            },
            "__wrappers__.startPublicMint_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.startWlMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4358,
                "type": "function"
            },
            "__wrappers__.startWlMint.Args": {
                "full_name": "__wrappers__.startWlMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.startWlMint.ImplicitArgs": {
                "full_name": "__wrappers__.startWlMint.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.startWlMint.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.startWlMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.startWlMint.__wrapped_func": {
                "destination": "__main__.startWlMint",
                "type": "alias"
            },
            "__wrappers__.startWlMint_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.stopPublicMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4330,
                "type": "function"
            },
            "__wrappers__.stopPublicMint.Args": {
                "full_name": "__wrappers__.stopPublicMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.stopPublicMint.ImplicitArgs": {
                "full_name": "__wrappers__.stopPublicMint.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.stopPublicMint.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.stopPublicMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.stopPublicMint.__wrapped_func": {
                "destination": "__main__.stopPublicMint",
                "type": "alias"
            },
            "__wrappers__.stopPublicMint_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.stopWlMint": {
                "decorators": [
                    "external"
                ],
                "pc": 4386,
                "type": "function"
            },
            "__wrappers__.stopWlMint.Args": {
                "full_name": "__wrappers__.stopWlMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.stopWlMint.ImplicitArgs": {
                "full_name": "__wrappers__.stopWlMint.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.stopWlMint.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.stopWlMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.stopWlMint.__wrapped_func": {
                "destination": "__main__.stopWlMint",
                "type": "alias"
            },
            "__wrappers__.stopWlMint_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.supportsInterface": {
                "decorators": [
                    "view"
                ],
                "pc": 2965,
                "type": "function"
            },
            "__wrappers__.supportsInterface.Args": {
                "full_name": "__wrappers__.supportsInterface.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.supportsInterface.__wrapped_func": {
                "destination": "__main__.supportsInterface",
                "type": "alias"
            },
            "__wrappers__.supportsInterface_encode_return": {
                "decorators": [],
                "pc": 2956,
                "type": "function"
            },
            "__wrappers__.supportsInterface_encode_return.Args": {
                "full_name": "__wrappers__.supportsInterface_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(success: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.supportsInterface_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.supportsInterface_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.supportsInterface_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.supportsInterface_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.symbol": {
                "decorators": [
                    "view"
                ],
                "pc": 3028,
                "type": "function"
            },
            "__wrappers__.symbol.Args": {
                "full_name": "__wrappers__.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol.ImplicitArgs": {
                "full_name": "__wrappers__.symbol.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.symbol.__wrapped_func": {
                "destination": "__main__.symbol",
                "type": "alias"
            },
            "__wrappers__.symbol_encode_return": {
                "decorators": [],
                "pc": 3019,
                "type": "function"
            },
            "__wrappers__.symbol_encode_return.Args": {
                "full_name": "__wrappers__.symbol_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(symbol: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.symbol_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.symbol_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.tokenURI": {
                "decorators": [
                    "view"
                ],
                "pc": 3293,
                "type": "function"
            },
            "__wrappers__.tokenURI.Args": {
                "full_name": "__wrappers__.tokenURI.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.tokenURI.__wrapped_func": {
                "destination": "__main__.tokenURI",
                "type": "alias"
            },
            "__wrappers__.tokenURI_encode_return": {
                "decorators": [],
                "pc": 3274,
                "type": "function"
            },
            "__wrappers__.tokenURI_encode_return.Args": {
                "full_name": "__wrappers__.tokenURI_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(token_uri_len: felt, token_uri: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.tokenURI_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.tokenURI_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.tokenURI_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.tokenURI_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.tokenURI_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.totalSupply": {
                "decorators": [
                    "view"
                ],
                "pc": 3201,
                "type": "function"
            },
            "__wrappers__.totalSupply.Args": {
                "full_name": "__wrappers__.totalSupply.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupply.ImplicitArgs": {
                "full_name": "__wrappers__.totalSupply.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupply.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupply.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.totalSupply.__wrapped_func": {
                "destination": "__main__.totalSupply",
                "type": "alias"
            },
            "__wrappers__.totalSupply_encode_return": {
                "decorators": [],
                "pc": 3192,
                "type": "function"
            },
            "__wrappers__.totalSupply_encode_return.Args": {
                "full_name": "__wrappers__.totalSupply_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(supply: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.totalSupply_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.totalSupply_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.totalSupply_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.totalSupply_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.totalSupply_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferFrom": {
                "decorators": [
                    "external"
                ],
                "pc": 3721,
                "type": "function"
            },
            "__wrappers__.transferFrom.Args": {
                "full_name": "__wrappers__.transferFrom.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFrom.ImplicitArgs": {
                "full_name": "__wrappers__.transferFrom.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferFrom.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferFrom.__wrapped_func": {
                "destination": "__main__.transferFrom",
                "type": "alias"
            },
            "__wrappers__.transferFrom_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.transferOwnership": {
                "decorators": [
                    "external"
                ],
                "pc": 4035,
                "type": "function"
            },
            "__wrappers__.transferOwnership.Args": {
                "full_name": "__wrappers__.transferOwnership.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferOwnership.ImplicitArgs": {
                "full_name": "__wrappers__.transferOwnership.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.transferOwnership.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.transferOwnership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.transferOwnership.__wrapped_func": {
                "destination": "__main__.transferOwnership",
                "type": "alias"
            },
            "__wrappers__.transferOwnership_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.unpause": {
                "decorators": [
                    "external"
                ],
                "pc": 4107,
                "type": "function"
            },
            "__wrappers__.unpause.Args": {
                "full_name": "__wrappers__.unpause.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.unpause.ImplicitArgs": {
                "full_name": "__wrappers__.unpause.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.unpause.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.unpause.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.unpause.__wrapped_func": {
                "destination": "__main__.unpause",
                "type": "alias"
            },
            "__wrappers__.unpause_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.wlMint": {
                "decorators": [
                    "external"
                ],
                "pc": 3896,
                "type": "function"
            },
            "__wrappers__.wlMint.Args": {
                "full_name": "__wrappers__.wlMint.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.wlMint.ImplicitArgs": {
                "full_name": "__wrappers__.wlMint.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.wlMint.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.wlMint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.wlMint.__wrapped_func": {
                "destination": "__main__.wlMint",
                "type": "alias"
            },
            "__wrappers__.wlMint_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.Ownable": {
                "type": "namespace"
            },
            "openzeppelin.access.ownable.library.Ownable.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable._transfer_ownership": {
                "decorators": [],
                "pc": 712,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args",
                "members": {
                    "new_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable._transfer_ownership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable.assert_only_owner": {
                "decorators": [],
                "pc": 669,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable.assert_only_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable.initializer": {
                "decorators": [],
                "pc": 662,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable.initializer.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.initializer.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.initializer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable.initializer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable.owner": {
                "decorators": [],
                "pc": 684,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable.owner.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.owner.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable.owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable.renounce_ownership": {
                "decorators": [],
                "pc": 702,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable.renounce_ownership.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.renounce_ownership.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.renounce_ownership.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.renounce_ownership.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.renounce_ownership.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable.renounce_ownership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable.transfer_ownership": {
                "decorators": [],
                "pc": 690,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Args",
                "members": {
                    "new_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.transfer_ownership.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable.transfer_ownership.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable.transfer_ownership.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable_owner": {
                "type": "namespace"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable_owner.addr": {
                "decorators": [],
                "pc": 632,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.addr.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable_owner.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.read": {
                "decorators": [],
                "pc": 637,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.read.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.read.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.Ownable_owner.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.write": {
                "decorators": [],
                "pc": 650,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.write.Args": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.Ownable_owner.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred": {
                "type": "namespace"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.Args": {
                "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.SELECTOR": {
                "type": "const",
                "value": 553132481214675521502977957974509639062080100631756862105218886163371506175
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.emit": {
                "decorators": [],
                "pc": 607,
                "type": "function"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args": {
                "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args",
                "members": {
                    "newOwner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousOwner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs": {
                "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.OwnershipTransferred.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "openzeppelin.access.ownable.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165": {
                "type": "namespace"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.Args": {
                "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.SUPPORTSINTERFACE_SELECTOR": {
                "type": "const",
                "value": 1184015894760294494673613438913361435336722154500302038630992932234692784845
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface": {
                "decorators": [],
                "pc": 953,
                "type": "function"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.Args": {
                "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "interfaceId": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "openzeppelin.introspection.erc165.library.ERC165": {
                "type": "namespace"
            },
            "openzeppelin.introspection.erc165.library.ERC165.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.ERC165.register_interface": {
                "decorators": [],
                "pc": 791,
                "type": "function"
            },
            "openzeppelin.introspection.erc165.library.ERC165.register_interface.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165.register_interface.Args",
                "members": {
                    "interface_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165.register_interface.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165.register_interface.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165.register_interface.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165.register_interface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.ERC165.supports_interface": {
                "decorators": [],
                "pc": 774,
                "type": "function"
            },
            "openzeppelin.introspection.erc165.library.ERC165.supports_interface.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165.supports_interface.Args",
                "members": {
                    "interface_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165.supports_interface.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165.supports_interface.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165.supports_interface.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165.supports_interface.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces": {
                "type": "namespace"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr": {
                "decorators": [],
                "pc": 733,
                "type": "function"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.Args",
                "members": {
                    "interface_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read": {
                "decorators": [],
                "pc": 747,
                "type": "function"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.Args",
                "members": {
                    "interface_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.Return": {
                "cairo_type": "(is_supported: felt)",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write": {
                "decorators": [],
                "pc": 761,
                "type": "function"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.Args": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.Args",
                "members": {
                    "interface_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.ImplicitArgs": {
                "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.introspection.erc165.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.IERC165_ID": {
                "destination": "openzeppelin.utils.constants.library.IERC165_ID",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.INVALID_ID": {
                "destination": "openzeppelin.utils.constants.library.INVALID_ID",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "openzeppelin.introspection.erc165.library.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Pausable": {
                "type": "namespace"
            },
            "openzeppelin.security.pausable.library.Pausable.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable._pause": {
                "decorators": [],
                "pc": 911,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable._pause.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable._pause.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable._pause.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable._pause.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable._pause.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable._pause.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable._unpause": {
                "decorators": [],
                "pc": 932,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable._unpause.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable._unpause.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable._unpause.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable._unpause.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable._unpause.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable._unpause.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable.assert_not_paused": {
                "decorators": [],
                "pc": 889,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_not_paused.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.assert_not_paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_not_paused.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.assert_not_paused.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_not_paused.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_not_paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable.assert_paused": {
                "decorators": [],
                "pc": 900,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_paused.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.assert_paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_paused.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.assert_paused.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_paused.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable.assert_paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable.is_paused": {
                "decorators": [],
                "pc": 883,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable.is_paused.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.is_paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.is_paused.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable.is_paused.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable.is_paused.Return": {
                "cairo_type": "(paused: felt)",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable.is_paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable_paused": {
                "type": "namespace"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable_paused.addr": {
                "decorators": [],
                "pc": 805,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.addr.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.addr.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable_paused.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.read": {
                "decorators": [],
                "pc": 810,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.read.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.read.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.read.Return": {
                "cairo_type": "(paused: felt)",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Pausable_paused.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.write": {
                "decorators": [],
                "pc": 823,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.write.Args": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.write.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Pausable_paused.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Pausable_paused.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Paused": {
                "type": "namespace"
            },
            "openzeppelin.security.pausable.library.Paused.Args": {
                "full_name": "openzeppelin.security.pausable.library.Paused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Paused.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Paused.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Paused.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Paused.SELECTOR": {
                "type": "const",
                "value": 1320402663531014602992311870740668414137519710251354012280782652722127322256
            },
            "openzeppelin.security.pausable.library.Paused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Paused.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Paused.emit": {
                "decorators": [],
                "pc": 835,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Paused.emit.Args": {
                "full_name": "openzeppelin.security.pausable.library.Paused.emit.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Paused.emit.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Paused.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Paused.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Paused.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "openzeppelin.security.pausable.library.Paused.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Paused.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Unpaused": {
                "type": "namespace"
            },
            "openzeppelin.security.pausable.library.Unpaused.Args": {
                "full_name": "openzeppelin.security.pausable.library.Unpaused.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Unpaused.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Unpaused.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Unpaused.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Unpaused.SELECTOR": {
                "type": "const",
                "value": 418561447776248122016475928983747519434136073035528187477649581867001663729
            },
            "openzeppelin.security.pausable.library.Unpaused.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.pausable.library.Unpaused.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Unpaused.emit": {
                "decorators": [],
                "pc": 859,
                "type": "function"
            },
            "openzeppelin.security.pausable.library.Unpaused.emit.Args": {
                "full_name": "openzeppelin.security.pausable.library.Unpaused.emit.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Unpaused.emit.ImplicitArgs": {
                "full_name": "openzeppelin.security.pausable.library.Unpaused.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.security.pausable.library.Unpaused.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.pausable.library.Unpaused.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "openzeppelin.security.pausable.library.Unpaused.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.Unpaused.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.security.pausable.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.SafeUint256": {
                "type": "namespace"
            },
            "openzeppelin.security.safemath.library.SafeUint256.Args": {
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.ImplicitArgs": {
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.security.safemath.library.SafeUint256.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.safemath.library.SafeUint256.add": {
                "decorators": [],
                "pc": 976,
                "type": "function"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.Args": {
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.add.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.ImplicitArgs": {
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.add.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.Return": {
                "cairo_type": "(c: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.security.safemath.library.SafeUint256.add.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le": {
                "decorators": [],
                "pc": 997,
                "type": "function"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.Args": {
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.sub_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.ImplicitArgs": {
                "full_name": "openzeppelin.security.safemath.library.SafeUint256.sub_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.Return": {
                "cairo_type": "(c: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.security.safemath.library.SafeUint256.sub_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.security.safemath.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_add": {
                "destination": "starkware.cairo.common.uint256.uint256_add",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_eq": {
                "destination": "starkware.cairo.common.uint256.uint256_eq",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_le": {
                "destination": "starkware.cairo.common.uint256.uint256_le",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_lt": {
                "destination": "starkware.cairo.common.uint256.uint256_lt",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_mul": {
                "destination": "starkware.cairo.common.uint256.uint256_mul",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_sub": {
                "destination": "starkware.cairo.common.uint256.uint256_sub",
                "type": "alias"
            },
            "openzeppelin.security.safemath.library.uint256_unsigned_div_rem": {
                "destination": "starkware.cairo.common.uint256.uint256_unsigned_div_rem",
                "type": "alias"
            },
            "openzeppelin.token.erc20.IERC20.IERC20": {
                "type": "namespace"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.ALLOWANCE_SELECTOR": {
                "type": "const",
                "value": 863164345921111744606866654754108663958095967665259696902984674202985078753
            },
            "openzeppelin.token.erc20.IERC20.IERC20.APPROVE_SELECTOR": {
                "type": "const",
                "value": 949021990203918389843157787496164629863144228991510976554585288817234167820
            },
            "openzeppelin.token.erc20.IERC20.IERC20.Args": {
                "full_name": "openzeppelin.token.erc20.IERC20.IERC20.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.BALANCEOF_SELECTOR": {
                "type": "const",
                "value": 1307730684388977109649524593492043083703013045633289330664425380824804018030
            },
            "openzeppelin.token.erc20.IERC20.IERC20.DECIMALS_SELECTOR": {
                "type": "const",
                "value": 134830404806214277570220174593674215737759987247891306080029841794115377321
            },
            "openzeppelin.token.erc20.IERC20.IERC20.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc20.IERC20.IERC20.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.NAME_SELECTOR": {
                "type": "const",
                "value": 1528802474226268325865027367859591458315299653151958663884057507666229546336
            },
            "openzeppelin.token.erc20.IERC20.IERC20.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc20.IERC20.IERC20.SYMBOL_SELECTOR": {
                "type": "const",
                "value": 944713526212149105522785400348068751682982210605126537021911324578866405028
            },
            "openzeppelin.token.erc20.IERC20.IERC20.TOTALSUPPLY_SELECTOR": {
                "type": "const",
                "value": 227334030968744315992796982100494617316223563777432855541120004521101595501
            },
            "openzeppelin.token.erc20.IERC20.IERC20.TRANSFERFROM_SELECTOR": {
                "type": "const",
                "value": 116061167288211781254449158074459916871457383008289084697957612485591092000
            },
            "openzeppelin.token.erc20.IERC20.IERC20.TRANSFER_SELECTOR": {
                "type": "const",
                "value": 232670485425082704932579856502088130646006032362877466777181098476241604910
            },
            "openzeppelin.token.erc20.IERC20.IERC20.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.transferFrom": {
                "decorators": [],
                "pc": 2028,
                "type": "function"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.transferFrom.Args": {
                "full_name": "openzeppelin.token.erc20.IERC20.IERC20.transferFrom.Args",
                "members": {
                    "amount": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.transferFrom.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc20.IERC20.IERC20.transferFrom.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.transferFrom.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc20.IERC20.IERC20.transferFrom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "openzeppelin.token.erc20.IERC20.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.Args": {
                "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.ONERC721RECEIVED_SELECTOR": {
                "type": "const",
                "value": 441833262846246486607087847804043886170335009155803575450536462761436446875
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received": {
                "decorators": [],
                "pc": 1024,
                "type": "function"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.Args": {
                "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.Args",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 6
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.Return": {
                "cairo_type": "(selector: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "openzeppelin.token.erc721.IERC721Receiver.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Approval": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.Approval.Args": {
                "full_name": "openzeppelin.token.erc721.library.Approval.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Approval.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.Approval.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Approval.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.Approval.SELECTOR": {
                "type": "const",
                "value": 544914742286571513055574265148471203182105283038408585630116262969508767999
            },
            "openzeppelin.token.erc721.library.Approval.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.Approval.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Approval.emit": {
                "decorators": [],
                "pc": 1088,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.Approval.emit.Args": {
                "full_name": "openzeppelin.token.erc721.library.Approval.emit.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Approval.emit.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.Approval.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Approval.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.Approval.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "openzeppelin.token.erc721.library.Approval.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Approval.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.Args": {
                "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.SELECTOR": {
                "type": "const",
                "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.emit": {
                "decorators": [],
                "pc": 1115,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.emit.Args": {
                "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.emit.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.emit.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ApprovalForAll.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC165": {
                "destination": "openzeppelin.introspection.erc165.library.ERC165",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721._approve": {
                "decorators": [],
                "pc": 1751,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._approve.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._approve.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._approve.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._approve.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._approve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721._burn": {
                "decorators": [],
                "pc": 1924,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._burn.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._burn.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._burn.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._burn.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._burn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._burn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721._exists": {
                "decorators": [],
                "pc": 1730,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._exists.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._exists.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._exists.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._exists.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._exists.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._exists.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner": {
                "decorators": [],
                "pc": 1663,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.Args",
                "members": {
                    "spender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "openzeppelin.token.erc721.library.ERC721._mint": {
                "decorators": [],
                "pc": 1869,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._mint.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._mint.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._mint.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._mint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._mint.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._mint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721._safe_transfer": {
                "decorators": [],
                "pc": 1846,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._safe_transfer.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._safe_transfer.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._safe_transfer.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._safe_transfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._safe_transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._safe_transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721._transfer": {
                "decorators": [],
                "pc": 1775,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721._transfer.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._transfer.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._transfer.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721._transfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721._transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721._transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.approve": {
                "decorators": [],
                "pc": 1480,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.approve.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.approve.Args",
                "members": {
                    "to": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.approve.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.approve.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.approve.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.approve.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner": {
                "decorators": [],
                "pc": 1643,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.balance_of": {
                "decorators": [],
                "pc": 1421,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.balance_of.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.balance_of.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.balance_of.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.balance_of.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.balance_of.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.balance_of.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.get_approved": {
                "decorators": [],
                "pc": 1450,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.get_approved.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.get_approved.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.get_approved.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.get_approved.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.get_approved.Return": {
                "cairo_type": "(approved: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.get_approved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.initializer": {
                "decorators": [],
                "pc": 1391,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.initializer.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.initializer.Args",
                "members": {
                    "name": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "symbol": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.initializer.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.initializer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.initializer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.initializer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.is_approved_for_all": {
                "decorators": [],
                "pc": 1472,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.Args",
                "members": {
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.name": {
                "decorators": [],
                "pc": 1409,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.name.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.name.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.name.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.name.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.owner_of": {
                "decorators": [],
                "pc": 1431,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.owner_of.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.owner_of.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.owner_of.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.owner_of.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.owner_of.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.owner_of.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.safe_transfer_from": {
                "decorators": [],
                "pc": 1606,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "openzeppelin.token.erc721.library.ERC721.set_approval_for_all": {
                "decorators": [],
                "pc": 1536,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.Args",
                "members": {
                    "approved": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.symbol": {
                "decorators": [],
                "pc": 1415,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.symbol.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.symbol.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.symbol.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.symbol.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721.transfer_from": {
                "decorators": [],
                "pc": 1571,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721.transfer_from.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.transfer_from.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.transfer_from.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721.transfer_from.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721.transfer_from.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721.transfer_from.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "openzeppelin.token.erc721.library.ERC721_balances": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_balances.addr": {
                "decorators": [],
                "pc": 1247,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.addr.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.addr.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.addr.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_balances.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.read": {
                "decorators": [],
                "pc": 1261,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.read.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.read.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.read.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.read.Return": {
                "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_balances.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.write": {
                "decorators": [],
                "pc": 1281,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.write.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.write.Args",
                "members": {
                    "account": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.write.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_balances.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_balances.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_name": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_name.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_name.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_name.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_name.addr": {
                "decorators": [],
                "pc": 1141,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_name.addr.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.addr.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_name.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_name.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_name.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_name.read": {
                "decorators": [],
                "pc": 1146,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_name.read.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.read.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.read.Return": {
                "cairo_type": "(name: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_name.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_name.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_name.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_name.write": {
                "decorators": [],
                "pc": 1159,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_name.write.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.write.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_name.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_name.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_name.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr": {
                "decorators": [],
                "pc": 1345,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Args",
                "members": {
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.read": {
                "decorators": [],
                "pc": 1362,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Args",
                "members": {
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Return": {
                "cairo_type": "(is_approved: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.write": {
                "decorators": [],
                "pc": 1377,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Args",
                "members": {
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_owners": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_owners.addr": {
                "decorators": [],
                "pc": 1201,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.addr.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.addr.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.addr.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_owners.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.read": {
                "decorators": [],
                "pc": 1218,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.read.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.read.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.read.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.read.Return": {
                "cairo_type": "(owner: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_owners.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.write": {
                "decorators": [],
                "pc": 1233,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.write.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.write.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.write.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_owners.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_owners.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_symbol": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.addr": {
                "decorators": [],
                "pc": 1171,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.addr.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.addr.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.read": {
                "decorators": [],
                "pc": 1176,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.read.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.read.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.read.Return": {
                "cairo_type": "(symbol: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.write": {
                "decorators": [],
                "pc": 1189,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.write.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.write.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_symbol.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.addr": {
                "decorators": [],
                "pc": 1299,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.read": {
                "decorators": [],
                "pc": 1316,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.read.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Return": {
                "cairo_type": "(approved: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.write": {
                "decorators": [],
                "pc": 1331,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Args",
                "members": {
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.write.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_token_approvals.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.Args": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.ERC721_token_uri.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.IACCOUNT_ID": {
                "destination": "openzeppelin.utils.constants.library.IACCOUNT_ID",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.IERC165": {
                "destination": "openzeppelin.introspection.erc165.IERC165.IERC165",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.IERC721Receiver": {
                "destination": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.IERC721_ID": {
                "destination": "openzeppelin.utils.constants.library.IERC721_ID",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.IERC721_METADATA_ID": {
                "destination": "openzeppelin.utils.constants.library.IERC721_METADATA_ID",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.IERC721_RECEIVER_ID": {
                "destination": "openzeppelin.utils.constants.library.IERC721_RECEIVER_ID",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.SafeUint256": {
                "destination": "openzeppelin.security.safemath.library.SafeUint256",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Transfer": {
                "type": "namespace"
            },
            "openzeppelin.token.erc721.library.Transfer.Args": {
                "full_name": "openzeppelin.token.erc721.library.Transfer.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Transfer.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.Transfer.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Transfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.Transfer.SELECTOR": {
                "type": "const",
                "value": 271746229759260285552388728919865295615886751538523744128730118297934206697
            },
            "openzeppelin.token.erc721.library.Transfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.Transfer.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Transfer.emit": {
                "decorators": [],
                "pc": 1061,
                "type": "function"
            },
            "openzeppelin.token.erc721.library.Transfer.emit.Args": {
                "full_name": "openzeppelin.token.erc721.library.Transfer.emit.Args",
                "members": {
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "tokenId": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Transfer.emit.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library.Transfer.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library.Transfer.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library.Transfer.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "openzeppelin.token.erc721.library.Transfer.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Transfer.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library._check_onERC721Received": {
                "decorators": [],
                "pc": 1983,
                "type": "function"
            },
            "openzeppelin.token.erc721.library._check_onERC721Received.Args": {
                "full_name": "openzeppelin.token.erc721.library._check_onERC721Received.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 5
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "from_": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library._check_onERC721Received.ImplicitArgs": {
                "full_name": "openzeppelin.token.erc721.library._check_onERC721Received.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "openzeppelin.token.erc721.library._check_onERC721Received.Return": {
                "cairo_type": "(success: felt)",
                "type": "type_definition"
            },
            "openzeppelin.token.erc721.library._check_onERC721Received.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.token.erc721.library.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "openzeppelin.token.erc721.library.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "openzeppelin.utils.constants.library.DEFAULT_ADMIN_ROLE": {
                "type": "const",
                "value": 0
            },
            "openzeppelin.utils.constants.library.IACCESSCONTROL_ID": {
                "type": "const",
                "value": 2036718347
            },
            "openzeppelin.utils.constants.library.IACCOUNT_ID": {
                "type": "const",
                "value": 2792084853
            },
            "openzeppelin.utils.constants.library.IERC165_ID": {
                "type": "const",
                "value": 33540519
            },
            "openzeppelin.utils.constants.library.IERC721_ENUMERABLE_ID": {
                "type": "const",
                "value": 2014223715
            },
            "openzeppelin.utils.constants.library.IERC721_ID": {
                "type": "const",
                "value": 2158778573
            },
            "openzeppelin.utils.constants.library.IERC721_METADATA_ID": {
                "type": "const",
                "value": 1532892063
            },
            "openzeppelin.utils.constants.library.IERC721_RECEIVER_ID": {
                "type": "const",
                "value": 353073666
            },
            "openzeppelin.utils.constants.library.INVALID_ID": {
                "type": "const",
                "value": 4294967295
            },
            "openzeppelin.utils.constants.library.TRANSACTION_VERSION": {
                "type": "const",
                "value": 1
            },
            "openzeppelin.utils.constants.library.UINT8_MAX": {
                "type": "const",
                "value": 255
            },
            "src.contracts.lib.array.array.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "src.contracts.lib.array.array._loop_invert_arr": {
                "decorators": [],
                "pc": 2112,
                "type": "function"
            },
            "src.contracts.lib.array.array._loop_invert_arr.Args": {
                "full_name": "src.contracts.lib.array.array._loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "src.contracts.lib.array.array._loop_invert_arr.ImplicitArgs": {
                "full_name": "src.contracts.lib.array.array._loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.array.array._loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.contracts.lib.array.array._loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.array.array._sub_loop_invert_arr": {
                "decorators": [],
                "pc": 2139,
                "type": "function"
            },
            "src.contracts.lib.array.array._sub_loop_invert_arr.Args": {
                "full_name": "src.contracts.lib.array.array._sub_loop_invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "inv_arr": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "struct_index": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "struct_offset": {
                        "cairo_type": "felt",
                        "offset": 5
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "src.contracts.lib.array.array._sub_loop_invert_arr.ImplicitArgs": {
                "full_name": "src.contracts.lib.array.array._sub_loop_invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.array.array._sub_loop_invert_arr.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.contracts.lib.array.array._sub_loop_invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.array.array.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "src.contracts.lib.array.array.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "src.contracts.lib.array.array.concat_arr": {
                "decorators": [],
                "pc": 2054,
                "type": "function"
            },
            "src.contracts.lib.array.array.concat_arr.Args": {
                "full_name": "src.contracts.lib.array.array.concat_arr.Args",
                "members": {
                    "arr1": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr1_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "arr2": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "arr2_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "src.contracts.lib.array.array.concat_arr.ImplicitArgs": {
                "full_name": "src.contracts.lib.array.array.concat_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.array.array.concat_arr.Return": {
                "cairo_type": "(concat_len: felt, concat: felt*)",
                "type": "type_definition"
            },
            "src.contracts.lib.array.array.concat_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "src.contracts.lib.array.array.invert_arr": {
                "decorators": [],
                "pc": 2081,
                "type": "function"
            },
            "src.contracts.lib.array.array.invert_arr.Args": {
                "full_name": "src.contracts.lib.array.array.invert_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.array.array.invert_arr.ImplicitArgs": {
                "full_name": "src.contracts.lib.array.array.invert_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.array.array.invert_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "src.contracts.lib.array.array.invert_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "src.contracts.lib.array.array.invert_felt_arr": {
                "decorators": [],
                "pc": 2104,
                "type": "function"
            },
            "src.contracts.lib.array.array.invert_felt_arr.Args": {
                "full_name": "src.contracts.lib.array.array.invert_felt_arr.Args",
                "members": {
                    "arr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "arr_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.array.array.invert_felt_arr.ImplicitArgs": {
                "full_name": "src.contracts.lib.array.array.invert_felt_arr.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.array.array.invert_felt_arr.Return": {
                "cairo_type": "(inv_arr_len: felt, inv_arr: felt*)",
                "type": "type_definition"
            },
            "src.contracts.lib.array.array.invert_felt_arr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.array.array.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "src.contracts.lib.array.array.squash_dict": {
                "destination": "starkware.cairo.common.squash_dict.squash_dict",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle._addresses_to_leafs_body": {
                "decorators": [],
                "pc": 2450,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle._addresses_to_leafs_body.Args": {
                "full_name": "src.contracts.lib.merkle.merkle._addresses_to_leafs_body.Args",
                "members": {
                    "i": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._addresses_to_leafs_body.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle._addresses_to_leafs_body.ImplicitArgs",
                "members": {
                    "allow_list": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "leafs": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "stop": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._addresses_to_leafs_body.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle._addresses_to_leafs_body.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.merkle.merkle._hash_sorted": {
                "decorators": [],
                "pc": 2282,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle._hash_sorted.Args": {
                "full_name": "src.contracts.lib.merkle.merkle._hash_sorted.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._hash_sorted.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle._hash_sorted.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._hash_sorted.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle._hash_sorted.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.merkle.merkle._merkle_build_body": {
                "decorators": [],
                "pc": 2371,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle._merkle_build_body.Args": {
                "full_name": "src.contracts.lib.merkle.merkle._merkle_build_body.Args",
                "members": {
                    "i": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._merkle_build_body.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle._merkle_build_body.ImplicitArgs",
                "members": {
                    "leafs": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "new_leafs": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "stop": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._merkle_build_body.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle._merkle_build_body.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.merkle.merkle._merkle_verify_body": {
                "decorators": [],
                "pc": 2307,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle._merkle_verify_body.Args": {
                "full_name": "src.contracts.lib.merkle.merkle._merkle_verify_body.Args",
                "members": {
                    "curr": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "proof": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "proof_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._merkle_verify_body.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle._merkle_verify_body.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle._merkle_verify_body.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle._merkle_verify_body.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.merkle.merkle.addresses_to_leafs": {
                "decorators": [],
                "pc": 2429,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle.addresses_to_leafs.Args": {
                "full_name": "src.contracts.lib.merkle.merkle.addresses_to_leafs.Args",
                "members": {
                    "allow_list": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "allow_list_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle.addresses_to_leafs.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle.addresses_to_leafs.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle.addresses_to_leafs.Return": {
                "cairo_type": "(leafs_len: felt, leafs: felt*)",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle.addresses_to_leafs.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "src.contracts.lib.merkle.merkle.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "src.contracts.lib.merkle.merkle.merkle_build": {
                "decorators": [],
                "pc": 2333,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle.merkle_build.Args": {
                "full_name": "src.contracts.lib.merkle.merkle.merkle_build.Args",
                "members": {
                    "leafs": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "leafs_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle.merkle_build.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle.merkle_build.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle.merkle_build.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle.merkle_build.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "src.contracts.lib.merkle.merkle.merkle_verify": {
                "decorators": [],
                "pc": 2259,
                "type": "function"
            },
            "src.contracts.lib.merkle.merkle.merkle_verify.Args": {
                "full_name": "src.contracts.lib.merkle.merkle.merkle_verify.Args",
                "members": {
                    "leaf": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "proof": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "proof_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "root": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle.merkle_verify.ImplicitArgs": {
                "full_name": "src.contracts.lib.merkle.merkle.merkle_verify.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.merkle.merkle.merkle_verify.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "src.contracts.lib.merkle.merkle.merkle_verify.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.merkle.merkle.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "src.contracts.lib.string.ASCII.String": {
                "destination": "src.contracts.lib.string.string.String",
                "type": "alias"
            },
            "src.contracts.lib.string.ASCII.StringCodec": {
                "type": "namespace"
            },
            "src.contracts.lib.string.ASCII.StringCodec.Args": {
                "full_name": "src.contracts.lib.string.ASCII.StringCodec.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "src.contracts.lib.string.ASCII.StringCodec.CHAR_SIZE": {
                "type": "const",
                "value": 256
            },
            "src.contracts.lib.string.ASCII.StringCodec.ImplicitArgs": {
                "full_name": "src.contracts.lib.string.ASCII.StringCodec.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "src.contracts.lib.string.ASCII.StringCodec.LAST_CHAR_MASK": {
                "type": "const",
                "value": 255
            },
            "src.contracts.lib.string.ASCII.StringCodec.NUMERICAL_OFFSET": {
                "type": "const",
                "value": 48
            },
            "src.contracts.lib.string.ASCII.StringCodec.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.contracts.lib.string.ASCII.StringCodec.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.string.ASCII.StringCodec.felt_to_string": {
                "decorators": [],
                "pc": 2249,
                "type": "function"
            },
            "src.contracts.lib.string.ASCII.StringCodec.felt_to_string.Args": {
                "full_name": "src.contracts.lib.string.ASCII.StringCodec.felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.string.ASCII.StringCodec.felt_to_string.ImplicitArgs": {
                "full_name": "src.contracts.lib.string.ASCII.StringCodec.felt_to_string.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.string.ASCII.StringCodec.felt_to_string.Return": {
                "cairo_type": "(str: src.contracts.lib.string.string.String)",
                "type": "type_definition"
            },
            "src.contracts.lib.string.ASCII.StringCodec.felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.string.ASCII.conversion_felt_to_string": {
                "destination": "src.contracts.lib.string.libs.conversion.conversion_felt_to_string",
                "type": "alias"
            },
            "src.contracts.lib.string.constants.SHORT_STRING_MAX_LEN": {
                "type": "const",
                "value": 31
            },
            "src.contracts.lib.string.constants.SHORT_STRING_MAX_VALUE": {
                "type": "const",
                "value": 452312848583266388373324160190187140051835877600158453279131187530910662655
            },
            "src.contracts.lib.string.constants.STRING_MAX_LEN": {
                "type": "const",
                "value": 32768
            },
            "src.contracts.lib.string.libs.conversion.STRING_MAX_LEN": {
                "destination": "src.contracts.lib.string.constants.STRING_MAX_LEN",
                "type": "alias"
            },
            "src.contracts.lib.string.libs.conversion.String": {
                "destination": "src.contracts.lib.string.string.String",
                "type": "alias"
            },
            "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string": {
                "decorators": [],
                "pc": 2203,
                "type": "function"
            },
            "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string.Args": {
                "full_name": "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "index": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "str_seed": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs": {
                "full_name": "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string.Return": {
                "cairo_type": "(str_len: felt)",
                "type": "type_definition"
            },
            "src.contracts.lib.string.libs.conversion._loop_felt_to_inverted_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.contracts.lib.string.libs.conversion.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "src.contracts.lib.string.libs.conversion.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "src.contracts.lib.string.libs.conversion.conversion_felt_to_string": {
                "decorators": [],
                "pc": 2178,
                "type": "function"
            },
            "src.contracts.lib.string.libs.conversion.conversion_felt_to_string.Args": {
                "full_name": "src.contracts.lib.string.libs.conversion.conversion_felt_to_string.Args",
                "members": {
                    "elem": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.contracts.lib.string.libs.conversion.conversion_felt_to_string.ImplicitArgs": {
                "full_name": "src.contracts.lib.string.libs.conversion.conversion_felt_to_string.ImplicitArgs",
                "members": {
                    "codec_numerical_offset": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.contracts.lib.string.libs.conversion.conversion_felt_to_string.Return": {
                "cairo_type": "(str: src.contracts.lib.string.string.String)",
                "type": "type_definition"
            },
            "src.contracts.lib.string.libs.conversion.conversion_felt_to_string.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "src.contracts.lib.string.libs.conversion.invert_felt_arr": {
                "destination": "src.contracts.lib.array.array.invert_felt_arr",
                "type": "alias"
            },
            "src.contracts.lib.string.libs.conversion.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "src.contracts.lib.string.libs.conversion.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "src.contracts.lib.string.string.String": {
                "full_name": "src.contracts.lib.string.string.String",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 44,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 44,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 44,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 44,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 39,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 86,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 86,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 86,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 86,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 8
                        },
                        "pc": 96,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 110,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 122,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 131,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 131,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 131,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 35,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 35,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal": {
                "decorators": [],
                "pc": 29,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_equal.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_equal.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_equal.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 29,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_equal.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_equal.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 29,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "pc": 24,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 57,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 57,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 57,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 57,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 142,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "members": {
                    "div": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 142,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 142,
                        "value": "[cast([fp + (-5)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 142,
                        "value": "[cast([fp + (-5)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 142,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 297,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 302,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 0
                        },
                        "pc": 302,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 23,
                            "offset": 0
                        },
                        "pc": 302,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 314,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 264,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 21,
                            "offset": 0
                        },
                        "pc": 264,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 288,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 274,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_not_zero": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 256,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.cairo.common.squash_dict.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.split_64": {
                "decorators": [],
                "pc": 349,
                "type": "function"
            },
            "starkware.cairo.common.uint256.split_64.Args": {
                "full_name": "starkware.cairo.common.uint256.split_64.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.split_64.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.split_64.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.split_64.Return": {
                "cairo_type": "(low: felt, high: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.split_64.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "starkware.cairo.common.uint256.split_64.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.split_64.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 26,
                            "offset": 0
                        },
                        "pc": 349,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.split_64.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.split_64.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 26,
                            "offset": 2
                        },
                        "pc": 351,
                        "value": "[cast(fp + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.split_64.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.split_64.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 26,
                            "offset": 2
                        },
                        "pc": 351,
                        "value": "[cast(fp, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add": {
                "decorators": [],
                "pc": 327,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_add.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_add.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_add.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_add.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_add.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256, carry: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_add.SIZEOF_LOCALS": {
                "type": "const",
                "value": 4
            },
            "starkware.cairo.common.uint256.uint256_add.a": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_add.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 25,
                            "offset": 0
                        },
                        "pc": 327,
                        "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add.b": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_add.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 25,
                            "offset": 0
                        },
                        "pc": 327,
                        "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add.carry_high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.uint256_add.carry_high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 25,
                            "offset": 4
                        },
                        "pc": 329,
                        "value": "[cast(fp + 3, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_add.carry_low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.uint256.uint256_add.carry_low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 25,
                            "offset": 4
                        },
                        "pc": 329,
                        "value": "[cast(fp + 2, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_check": {
                "decorators": [],
                "pc": 322,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_check.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_check.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_le": {
                "decorators": [],
                "pc": 470,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_le.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_le.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_lt": {
                "decorators": [],
                "pc": 453,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_lt.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_lt.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_mul": {
                "decorators": [],
                "pc": 365,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_mul.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_mul.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_mul.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_mul.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_mul.Return": {
                "cairo_type": "(low: starkware.cairo.common.uint256.Uint256, high: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_mul.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod": {
                "decorators": [],
                "pc": 482,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    },
                    "div": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 4
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.Return": {
                "cairo_type": "(quotient_low: starkware.cairo.common.uint256.Uint256, quotient_high: starkware.cairo.common.uint256.Uint256, remainder: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.SIZEOF_LOCALS": {
                "type": "const",
                "value": 6
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.a": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 30,
                            "offset": 0
                        },
                        "pc": 482,
                        "value": "[cast(fp + (-8), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.b": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 30,
                            "offset": 0
                        },
                        "pc": 482,
                        "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.div": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 30,
                            "offset": 0
                        },
                        "pc": 482,
                        "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.quotient_high": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.quotient_high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 30,
                            "offset": 182
                        },
                        "pc": 491,
                        "value": "[cast(fp + 2, starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.quotient_low": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.quotient_low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 30,
                            "offset": 182
                        },
                        "pc": 491,
                        "value": "[cast(fp, starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_mul_div_mod.remainder": {
                "cairo_type": "starkware.cairo.common.uint256.Uint256",
                "full_name": "starkware.cairo.common.uint256.uint256_mul_div_mod.remainder",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 30,
                            "offset": 182
                        },
                        "pc": 491,
                        "value": "[cast(fp + 4, starkware.cairo.common.uint256.Uint256*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.uint256.uint256_neg": {
                "decorators": [],
                "pc": 576,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_neg.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_neg.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_neg.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_neg.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_not": {
                "decorators": [],
                "pc": 568,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_not.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_not.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_not.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_not.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_not.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_not.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.uint256.uint256_sub": {
                "decorators": [],
                "pc": 591,
                "type": "function"
            },
            "starkware.cairo.common.uint256.uint256_sub.Args": {
                "full_name": "starkware.cairo.common.uint256.uint256_sub.Args",
                "members": {
                    "a": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs": {
                "full_name": "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.uint256_sub.Return": {
                "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "starkware.cairo.common.uint256.uint256_sub.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 157,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 157,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 2
                        },
                        "pc": 177,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 1
                        },
                        "pc": 159,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 197,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 197,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 1
                        },
                        "pc": 204,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 239,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 0
                        },
                        "pc": 239,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 18,
                            "offset": 1
                        },
                        "pc": 246,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 209,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 209,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 1
                        },
                        "pc": 212,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_contract_address": {
                "decorators": [],
                "pc": 216,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_contract_address.Return": {
                "cairo_type": "(contract_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_contract_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_contract_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 216,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 1
                        },
                        "pc": 219,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_tx_info": {
                "decorators": [],
                "pc": 249,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_tx_info.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_tx_info.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_tx_info.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_tx_info.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_tx_info.Return": {
                "cairo_type": "(tx_info: starkware.starknet.common.syscalls.TxInfo*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_tx_info.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_tx_info.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 0
                        },
                        "pc": 249,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 19,
                            "offset": 1
                        },
                        "pc": 252,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 223,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 0
                        },
                        "pc": 223,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 16,
                            "offset": 1
                        },
                        "pc": 227,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 231,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 0
                        },
                        "pc": 231,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 17,
                            "offset": 1
                        },
                        "pc": 236,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 29,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 29,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 35,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 44,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 44,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 44,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 57,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 57,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 57,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 86,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 86,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 86,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 131,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 131,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 142,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 142,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 142,
                    "value": "[cast([fp + (-5)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 142,
                    "value": "[cast([fp + (-5)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 157,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 1
                    },
                    "pc": 159,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 2
                    },
                    "pc": 177,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 197,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 209,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 216,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 223,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 231,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 239,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 249,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 264,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 302,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 302,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 327,
                    "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 327,
                    "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 4
                    },
                    "pc": 329,
                    "value": "[cast(fp + 2, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 4
                    },
                    "pc": 329,
                    "value": "[cast(fp + 3, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 26,
                        "offset": 0
                    },
                    "pc": 349,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 26,
                        "offset": 2
                    },
                    "pc": 351,
                    "value": "[cast(fp, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 26,
                        "offset": 2
                    },
                    "pc": 351,
                    "value": "[cast(fp + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 0
                    },
                    "pc": 482,
                    "value": "[cast(fp + (-8), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 0
                    },
                    "pc": 482,
                    "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 0
                    },
                    "pc": 482,
                    "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 182
                    },
                    "pc": 491,
                    "value": "[cast(fp, starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 182
                    },
                    "pc": 491,
                    "value": "[cast(fp + 2, starkware.cairo.common.uint256.Uint256*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 182
                    },
                    "pc": 491,
                    "value": "[cast(fp + 4, starkware.cairo.common.uint256.Uint256*)]"
                }
            ]
        }
    }
}
